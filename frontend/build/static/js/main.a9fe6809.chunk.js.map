{"version":3,"sources":["store/actions/testActions.js","components/tools/Dropdown.js","components/tools/settingOptions.js","components/tools/Settings.js","components/navbar/Navbar.js","components/test/TestText.js","components/test/UserInput.js","components/tools/Results.js","components/test/Test.js","components/tools/useInterval.js","components/tools/Timer.js","components/tools/helpKeys.js","components/tools/Help.js","components/tools/WPM.js","components/history/TestRecord.js","components/history/TestResultChart.js","components/history/TestResultGraph.js","components/history/History.js","components/tools/Tools.js","components/history/Achievements.js","App.js","store/reducers/testReducer.js","store/reducers/userReducer.js","store/reducers/rootReducer.js","index.js"],"names":["setUserInput","input","dispatch","getState","text","test","currentKey","content","length","cwc","replace","trim","split","correctKeys","looplen","Math","min","i","type","currentWordCount","currentKeyCount","currentCorrectKeyCount","Dropdown","title","header","resetThenSet","list","useState","isListOpen","setIsListOpen","handleClick","e","ddRef","current","contains","target","useEffect","document","addEventListener","removeEventListener","useRef","ref","className","onClick","role","map","item","value","id","key","selectItem","timers","selected","categories","dbLabel","tags","Settings","setShowSettings","useSelector","state","timer","category","showKeyboard","requireAccuracy","shallowEqual","useDispatch","temp","forEach","setTimer","setCategory","console","log","settings","setCheckboxValue","setShowKeyboard","setRequireAccuracy","checked","onChange","Navbar","toggleShowSettings","store","to","TestText","testState","totalWordCount","totalKeyCount","totalCorrectKeyCount","url","axios","get","then","response","data","catch","error","getRandomText","textLetters","inputLetters","letter","idx","UserInput","autoFocus","Results","results","accuracy","wordsPerMin","percentAccuracy","floor","Object","keys","Test","useInterval","callback","delay","savedCallback","setInterval","clearInterval","Timer","count","setCount","isRunning","setIsRunning","total","userId","getFirstRandomText","helpKeys","rowOne","class","rowTwo","rowThree","rowFour","rowFive","keyMap","shift","0","1","2","3","4","5","6","7","8","9","Help","row","WPM","wc","TestRecord","highest","create_date","formatedDate","match","TestResultChart","tests","user","Number","NEGATIVE_INFINITY","tableBody","colSpan","style","margin","TestResultGraph","svgRef","svgWrapper","dimensions","setDimensions","observeTarget","resizeObserver","ResizeObserver","entries","entry","contentRect","observe","unobserve","useResizeObserver","svg","select","lowest","POSITIVE_INFINITY","diff","yScale","scaleLinear","domain","range","height","yAxis","axisLeft","ticks","call","myLine","line","x","index","width","y","curve","curveCardinal","selectAll","join","attr","History","Tools","Achievements","App","showSettings","exact","path","initState","persistConfig","storage","persistReducer","action","textinput","name","email","isAuthenticated","rootReducer","combineReducers","testReducer","userReducer","persistedReducer","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","getElementById"],"mappings":"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,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,SAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,SAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,SAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,SAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,SAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,SAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,SAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,SAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,SAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,SAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,SAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,SAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,SAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,SAC1BC,EAAG,CAAEvF,MAAO,EAAGsF,MAAO,QACtBE,EAAG,CAAExF,MAAO,EAAGsF,MAAO,QACtBG,EAAG,CAAEzF,MAAO,EAAGsF,MAAO,QACtBI,EAAG,CAAE1F,MAAO,EAAGsF,MAAO,QACtBK,EAAG,CAAE3F,MAAO,EAAGsF,MAAO,QACtBM,EAAG,CAAE5F,MAAO,EAAGsF,MAAO,QACtBO,EAAG,CAAE7F,MAAO,EAAGsF,MAAO,QACtBQ,EAAG,CAAE9F,MAAO,EAAGsF,MAAO,QACtBS,EAAG,CAAE/F,MAAO,EAAGsF,MAAO,QACtBU,EAAG,CAAEhG,MAAO,EAAGsF,MAAO,QACtB,IAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,IAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,IAAK,CAAEtF,MAAO,EAAGsF,MAAO,QACxB,IAAK,CAAEtF,MAAO,EAAGsF,MAAO,SACxB,IAAK,CAAEtF,MAAO,EAAGsF,MAAO,SACxB,IAAK,CAAEtF,MAAO,EAAGsF,MAAO,SACxB,EAAK,CAAEtF,MAAO,EAAGsF,MAAO,SACxB,IAAK,CAAEtF,MAAO,EAAGsF,MAAO,SACxB,IAAK,CAAEtF,MAAO,EAAGsF,MAAO,QACxB,IAAK,CAAEtF,MAAO,EAAGsF,MAAO,QACxB,IAAK,CAAEtF,MAAO,EAAGsF,MAAO,QACxB,IAAK,CAAEtF,MAAO,EAAGsF,MAAO,QACxB,EAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,IAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,IAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,IAAK,CAAEtF,MAAO,IAAKsF,MAAO,SAC1B,IAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,IAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,IAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,IAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,IAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,IAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,IAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,IAAK,CAAEtF,MAAO,IAAKsF,MAAO,QAC1B,IAAK,CAAEtF,MAAM,IAAMsF,MAAO,QAC1B,IAAK,CAAEtF,MAAM,IAAMsF,MAAO,QAC1B,SAAK,CAAEtF,MAAM,IAAMsF,MAAO,QAC1B,SAAY,CAAEtF,MAAO,WAAYsF,MAAO,QACxC,KAAM,CAAEtF,MAAO,QAASsF,MAAO,SChTpBW,EAhCF,WAAO,IAAD,EAKXtF,aAAY,SAAAC,GAAK,MAAK,CACtB1D,MAAO0D,EAAMtD,KAAKJ,MAClBG,KAAMuD,EAAMtD,KAAKD,KACjBE,WAAYqD,EAAMtD,KAAKC,cACvB0D,KALA1D,GAJW,EAEXL,MAFW,EAGXG,KAHW,EAIXE,YAME2B,EAAU3B,GAAc8H,EAAO9H,GAAc8H,EAAO9H,GAAYyC,MAAQ,GACxEsF,EAAQ/H,GAAc8H,EAAO9H,GAAc8H,EAAO9H,GAAY+H,MAAQ,OAC5E,OACI,qBAAK3F,UAAU,WAAf,SACKkE,OAAOC,KAAKgB,GAAUhF,KAAI,SAAAoG,GAAG,OAC1B,yBAASvG,UAAU,UAAnB,SACKmF,EAASoB,GAAKpG,KAAI,SAACI,EAAKkD,GACrB,IAAIzD,EAAYO,EAAIF,QAAUd,EAAd,UAA2BgB,EAAI8E,MAA/B,yBAAuD9E,EAAI8E,OAM3E,OALc,UAAVM,GAA6B,YAARY,GAA6B,KAAR9C,GAEzB,SAAVkC,GAA4B,YAARY,GAA6B,IAAR9C,KADhDzD,GAAa,eAIV,qBAA2BA,UAAWA,EAAtC,SAAkDO,EAAIF,OAAtD,UAAaE,EAAb,YAAoBkD,QARD8C,SCInCC,EArBH,SAAC,GAAe,IAAb5B,EAAY,EAAZA,MAAY,EAMnB5D,aAAY,SAAAC,GAAK,MAAK,CACtByB,eAAgBzB,EAAMtD,KAAK+E,eAC3BjE,iBAAkBwC,EAAMtD,KAAKc,iBAC7ByC,MAAOD,EAAMtD,KAAKuD,MAClB2C,QAAS5C,EAAMtD,KAAKkG,WACpBvC,KATAoB,EAFmB,EAEnBA,eACAjE,EAHmB,EAGnBA,iBAEAoF,GALmB,EAInB3C,MAJmB,EAKnB2C,SAQA4C,EAAK5C,GAAWA,EAAQE,YACxBF,EAAQE,YAAca,EAClBvG,KAAK4F,OAAavB,EAAiBjE,GAAoBmG,EAA5C,IACX,EAER,OAAO,+BAAK6B,EAAL,oBCHIC,EAhBI,SAAC,GAAuB,IAArB/I,EAAoB,EAApBA,KAAMgJ,EAAc,EAAdA,QAAc,EAC0BhJ,GAAQ,GAAhEiJ,EAD8B,EAC9BA,YAAazF,EADiB,EACjBA,SAAUD,EADO,EACPA,MAAO6C,EADA,EACAA,YAAaD,EADb,EACaA,SAE7C+C,EAAeD,EAAcA,EAAYE,MADrC,6BACkD,GAE5D,OACI,+BACI,+BAAK/C,IAAgB4C,GAAW,2CAAiBE,KACjD,6BAAK9C,IACL,6BAAKD,IACL,+BAAK5C,EAAL,WACA,6BAAKC,QC0CF4F,EAnDS,WAgBpB,IAhB2B,IAAD,EAItB/F,aAAY,SAAAC,GAAK,MAAK,CACtB4C,QAAS5C,EAAMtD,KAAKkG,QACpBmD,MAAO/F,EAAMgG,KAAKD,SAClB1F,KAJA0F,GAHsB,EAEtBnD,QAFsB,EAGtBmD,OAWAL,GALapF,cAKH2F,OAAOC,mBAEZ5I,EAAI,EAAGA,EAAIyI,EAAMlJ,OAAQS,IAC1ByI,EAAMzI,GAAGwF,YAAc4C,IACvBA,EAAUK,EAAMzI,GAAGwF,aAI3B,IAAMqD,EAAYJ,GAASA,EAAMlJ,OAAS,EAAIkJ,EAAM7G,KAAI,SAAAxC,GACpD,OAAO,cAAC,EAAD,CAA0BA,KAAMA,EAAMgJ,QACvCA,GADkBhJ,EAAK2C,OAE5B,6BACD,oBAAI+G,QAAQ,IAAZ,4BAEJ,OAAKL,GAA0B,IAAjBA,EAAMlJ,OAIhB,qBAAKwJ,MAAO,CAAEC,OAAQ,SAAtB,SACI,wBAAOvH,UAAU,QAAjB,UACI,gCACI,+BACI,sCACA,qCACA,0CACA,sCACA,+CAGR,gCACKoH,SAfL,yB,gBCuDDI,EAjES,WAAO,IAEvBR,EACAhG,aAAY,SAAAC,GAAK,MAAK,CACtB+F,MAAO/F,EAAMgG,KAAKD,SAClB1F,KAHA0F,MAKES,EAAS3H,mBACT4H,EAAa5H,mBACb6H,EA3BgB,SAAC5H,GAAS,IAAD,EACKd,mBAAS,MADd,mBACxB0I,EADwB,KACZC,EADY,KAc/B,OAZAlI,qBAAU,WACN,IAAMmI,EAAgB9H,EAAIR,QACpBuI,EAAiB,IAAIC,KAAe,SAACC,GACvCA,EAAQvG,SAAQ,SAACwG,GACbL,EAAcK,EAAMC,mBAI5B,OADAJ,EAAeK,QAAQN,GAChB,WACHC,EAAeM,UAAUP,MAE9B,CAAC9H,IACG4H,EAaYU,CAAkBX,GA8CrC,OA5CAhI,qBAAU,WACN,IAAM4I,EAAMC,YAAOd,EAAOlI,SAC1B,GAAKoI,KACDX,EAAMlJ,OAAS,GAAnB,CAIA,IAHA,IAAI0K,EAAStB,OAAOuB,kBAChB9B,EAAUO,OAAOC,kBAEZ5I,EAAI,EAAGA,EAAIyI,EAAMlJ,OAAQS,IAC1ByI,EAAMzI,GAAGwF,YAAc4C,EACvBA,EAAUK,EAAMzI,GAAGwF,YACZiD,EAAMzI,GAAGwF,YAAcyE,IAC9BA,EAASxB,EAAMzI,GAAGwF,aAI1B,IAAM2E,GAAQ/B,EAAU6B,GAAU,EAE5BG,EAASC,cACVC,OAAO,CAACL,EAASE,EAAM/B,EAAU+B,IACjCI,MAAM,CAACnB,EAAWoB,OAAQ,IAGzBC,EAAQC,YAASN,GAAQO,MAAM,GACrCZ,EACKC,OAAO,WACPY,KAAKH,GAGV,IAAMI,EAASC,cACVC,GAAE,SAACjJ,EAAOkJ,GAAR,OAAkBA,GAAS5B,EAAW6B,OAASxC,EAAMlJ,OAAS,OAChE2L,GAAE,SAAApJ,GAAK,OAAIsI,EAAOtI,EAAM0D,gBACxB2F,MAAMC,KAEXrB,EACKsB,UAAU,QACV1G,KAAK,CAAC8D,IACN6C,KAAK,QACLC,KAAK,QAAS,QACdA,KAAK,KAAK,SAAAzJ,GAAK,OAAI+I,EAAO/I,MAC1ByJ,KAAK,OAAQ,WAEnB,CAAC9C,EAAOW,IAIP,qBAAK3H,UAAU,cAAcD,IAAK2H,EAAlC,SACI,sBAAK3H,IAAK0H,EAAQ+B,MAAM,OAAOT,OAAO,OAAtC,UACI,mBAAG/I,UAAU,WACb,mBAAGA,UAAU,iBCzDd+J,G,OAnBC,WAAO,IAEf/C,EACAhG,aAAY,SAAAC,GAAK,MAAK,CACtB+F,MAAO/F,EAAMgG,KAAKD,SAClB1F,KAHA0F,MAIElI,EAASkI,GAASA,EAAMlJ,OAAS,EAAI,8CAAwB,gDACnE,OACI,yBAASkC,UAAU,UAAnB,SAEI,gCACKlB,EACD,cAAC,EAAD,IACA,cAAC,EAAD,WCeDkL,EA1BD,WAAM,MAMU/K,mBAAS,GANnB,mBAMT2F,EANS,KAMFC,EANE,OAUZ7D,aAAY,SAAAC,GAAK,MAAK,CACtBG,aAAcH,EAAMtD,KAAKyD,aACzByC,QAAS5C,EAAMtD,KAAKkG,WACpBvC,KALAF,EARY,EAQZA,aARY,EASZyC,QAMJ,OACI,sBAAK7D,UAAU,QAAf,UACI,cAAC,EAAD,CAAO4E,MAAOA,EAAOC,SAAUA,IAC/B,qBAAK7E,UAAU,MAAf,SACI,cAAC,EAAD,CAAK4E,MAAOA,MAEfxD,GAAgB,cAAC,EAAD,QCnBd6I,EARM,WACjB,OACI,8BACI,iDCuDGC,MA1Cf,WAAgB,IAAD,EACWjL,mBAAS,IADpB,gCAG2BA,oBAAS,IAHpC,mBAGNkL,EAHM,KAGQpJ,EAHR,KAKPsB,EAAqB,WACzBtB,GAAiBoJ,IAEnB,OACE,cAAC,IAAD,UACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,iCACE,gCACE,cAAC,EAAD,CAAQhI,mBAAoBA,IAC3B8H,GACC,cAAC,EAAD,CAAUpJ,gBAAiBA,IAE7B,cAAC,EAAD,OAEF,cAAC,EAAD,SAGJ,cAAC,IAAD,CAAOsJ,KAAK,WAAZ,SACE,iCACE,gCACE,cAAC,EAAD,CAAQhI,mBAAoBA,IAC3B8H,GACC,cAAC,EAAD,CAAUpJ,gBAAiBA,IAE7B,cAAC,EAAD,OAEF,cAAC,EAAD,iB,gDChDRuJ,EAAY,CACdpJ,MAAO,CAAEZ,GAAI,EAAGD,MAAO,GAAIK,UAAU,EAAOH,IAAK,SACjDhD,MAAO,GACPG,KAAM,GACNgF,eAAgB,EAChBjE,iBAAkB,EAClBkE,cAAe,EACfjE,gBAAiB,EACjBkE,qBAAsB,EACtBjE,uBAAwB,EACxBkF,QAAS,GACT1C,SAAU,CAAEb,GAAI,EAAGD,MAAO,MAAOO,QAAS,KAAMF,UAAU,EAAOH,IAAK,YACtE3C,WAAY,GACZwD,cAAc,EACdC,iBAAiB,GAoGfkJ,EAAgB,CAClBhK,IAAK,OACLiK,QAASA,KAGEC,cAAeF,GAtGV,WAAgC,IAA/BtJ,EAA8B,uDAAtBqJ,EAAWI,EAAW,uCAC/C,OAAQA,EAAOlM,MACX,IAAK,iBAED,OAAO,2BACAyC,GADP,IAEI1D,MAAOmN,EAAOnN,MACdK,WAAY8M,EAAO9M,WACnBa,iBAAkBiM,EAAOjM,iBACzBC,gBAAiBgM,EAAOhM,gBACxBC,uBAAwB+L,EAAO/L,yBAEvC,IAAK,YAED,OADAiD,QAAQC,IAAI,aACL,2BACAZ,GADP,IAEIC,MAAOwJ,EAAOxJ,QAEtB,IAAK,eAED,OADAU,QAAQC,IAAI,gBACL,2BACAZ,GADP,IAEIE,SAAUuJ,EAAOvJ,WAEzB,IAAK,oBAED,OADAS,QAAQC,IAAI,qBACL,2BACAZ,GADP,IAEIG,aAAcsJ,EAAOtJ,eAE7B,IAAK,uBAED,OADAQ,QAAQC,IAAI,wBACL,2BACAZ,GADP,IAEII,gBAAiBqJ,EAAOrJ,kBAEhC,IAAK,WAED,OADAO,QAAQC,IAAI,WAAY6I,EAAOhN,MACxB,2BACAuD,GADP,IAEIvD,KAAMgN,EAAOhN,KACbH,MAAO,GACPK,WAAY8M,EAAOhN,KAAKG,QAAQ,KAExC,IAAK,iBAED,OADA+D,QAAQC,IAAI,iBAAkB6I,EAAOhN,MAC9B,2BACAuD,GADP,IAEIvD,KAAMgN,EAAOhN,KACbH,MAAO,GAAIoN,UAAW,GACtBjI,eAAgB,EAChBjE,iBAAkB,EAClBkE,cAAe,EACfjE,gBAAiB,EACjBkE,qBAAsB,EACtBjE,uBAAwB,EACxBkF,QAAS,GACTjG,WAAY8M,EAAOhN,KAAKG,QAAQ,KAExC,IAAK,aAED,OADA+D,QAAQC,IAAI,cACL,2BACAZ,GADP,IAEIyB,eAAgBgI,EAAOhI,eACvBjE,iBAAkB,EAClBkE,cAAe+H,EAAO/H,cAEtBC,qBAAsB8H,EAAO9H,uBAGrC,IAAK,mBAGD,OAFAhB,QAAQC,IAAI,oBACZD,QAAQC,IAAI,WAAY6I,EAAO7G,SACxB,2BACA5C,GADP,IAEI4C,QAAS6G,EAAO7G,QAChBtG,MAAO,GACPG,KAAM,GACNE,WAAY,GACZkG,SAAU4G,EAAO5G,WAEzB,IAAK,QAED,OADAlC,QAAQC,IAAI,QACL,2BACAZ,GADP,IAEIvD,KAAM,CAAEG,QAAS,IACjBN,MAAO,GACPmF,eAAgB,EAChBjE,iBAAkB,EAClBoF,QAAS,GACTjG,WAAY,KAEpB,QACI,OAAOqD,MC9GbqJ,EAAY,CACdhK,GAAI,EACJsK,KAAM,YACNC,MAAO,cACP7D,MAAO,GACP8D,iBAAiB,GA4BfP,EAAgB,CAClBhK,IAAK,OACLiK,QAASA,KAGEC,cAAeF,GA9BV,WAAgC,IAA/BtJ,EAA8B,uDAAtBqJ,EAAWI,EAAW,uCAC/C,OAAQA,EAAOlM,MACX,IAAK,QAED,OADAoD,QAAQC,IAAI,SACL,2BACAZ,GADP,IAEI2J,KAAMF,EAAOzD,KAAK2D,KAClBC,MAAOH,EAAOzD,KAAK4D,QAG3B,IAAK,SAED,OADAjJ,QAAQC,IAAI,UACLyI,EAEX,IAAK,iBAED,OADA1I,QAAQC,IAAI,kBACL,2BACAZ,GADP,IAEI+F,MAAO0D,EAAO1D,QAEtB,QACI,OAAO/F,MCvBJ8J,EALKC,YAAgB,CAChCrN,KAAMsN,EACNhE,KAAMiE,I,QCKJX,EAAgB,CACpBhK,IAAK,OACLiK,aAGIW,GAAmBV,YAAeF,EAAeQ,GACjDzI,GAAQ8I,YAAYD,GAAkBE,YAAgBC,MACtDC,GAAYC,YAAalJ,IAE/BmJ,IAASC,OACP,cAAC,IAAD,CAAUpJ,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAaiJ,UAAWA,GAAxB,SACE,cAAC,EAAD,QAGJ5L,SAASgM,eAAe,U","file":"static/js/main.a9fe6809.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport const setUserInput = (input) => {\n    return (dispatch, getState) => {\n        const testState = getState().test\n        const { text } = testState\n        const currentKey = !text.content || input.length >= text.content.length ?\n            \"\" : text.content[input.length] === \" \" ?\n                \"spacebar\" : text.content[input.length]\n        const formattedInput = input.replace(/\\s+/g, ' ').trim();\n        let cwc = formattedInput.split(\" \").length;\n\n        let correctKeys = 0\n        let looplen = Math.min(text.content.length, input.length)\n        for (let i = 0; i < looplen; i++) {\n            if (text.content[i] === input[i]) {\n                correctKeys++;\n            }\n        }\n\n        dispatch({\n            type: 'SET_USER_INPUT',\n            input,\n            currentWordCount: cwc,\n            currentKey,\n            currentKeyCount: input.length || 0,\n            currentCorrectKeyCount: correctKeys\n        })\n    }\n}\n\nexport const updateTotalCounts = () => {\n    return (dispatch, getState) => {\n        const testState = getState().test\n        const {\n            totalWordCount,\n            currentWordCount,\n            totalKeyCount,\n            currentKeyCount,\n            totalCorrectKeyCount,\n            currentCorrectKeyCount } = testState\n\n        dispatch({\n            type: 'SET_TOTALS',\n            totalWordCount: totalWordCount || 0 + currentWordCount || 0,\n            totalKeyCount: totalKeyCount || 0 + currentKeyCount || 0,\n            totalCorrectKeyCount: totalCorrectKeyCount || 0 + currentCorrectKeyCount || 0\n        })\n    }\n}\n\nexport const setWordCount = (wordCount) => {\n    return (dispatch) => {\n        dispatch({ type: 'SET_TOTAL_WC', totalWordCount: wordCount })\n    }\n}\n\nexport const getRandomText = (category) => {\n    return (dispatch) => {\n        const url = category && category.dbLabel ? `https://turbotype.herokuapp.com/api/text/random?category=${category.dbLabel}` : `https://turbotype.herokuapp.com/api/text/random`\n        // const url = \"https://turbotype.herokuapp.com/api/text/333\"\n        axios.get(url)\n            .then(response => {\n                dispatch({ type: 'SET_TEXT', text: response.data })\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n}\n\nexport const getFirstRandomText = (category) => {\n    return (dispatch) => {\n        // const url = \"https://turbotype.herokuapp.com/api/text/333\"\n        const url = category && category.dbLabel ? `https://turbotype.herokuapp.com/api/text/random?category=${category.dbLabel}` : `https://turbotype.herokuapp.com/api/text/random`\n        axios.get(url)\n            .then(response => {\n                dispatch({ type: 'SET_FIRST_TEXT', text: response.data })\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n}\n\nexport const setTimer = (timer) => {\n    return (dispatch) => {\n        dispatch({ type: 'SET_TIMER', timer })\n    }\n}\n\nexport const setCategory = (category) => {\n    return (dispatch) => {\n        dispatch({ type: 'SET_CATEGORY', category })\n    }\n}\n\nexport const setShowKeyboard = (showKeyboard) => {\n    return (dispatch) => {\n        dispatch({ type: 'SET_SHOW_KEYBOARD', showKeyboard })\n    }\n}\n\nexport const setRequireAccuracy = (requireAccuracy) => {\n    return (dispatch) => {\n        dispatch({ type: 'SET_REQUIRE_ACCURACY', requireAccuracy })\n    }\n}\n\nexport const createTestRecod = () => {\n    return (dispatch, getState) => {\n        const testState = getState().test\n        const {\n            totalWordCount,\n            totalCorrectKeyCount,\n            totalKeyCount,\n            currentCorrectKeyCount,\n            currentKeyCount,\n            currentWordCount,\n            timer,\n            category\n        } = testState\n\n        let total = totalWordCount || 0\n        const wordsPerMin = Math.floor(60 * ((total + currentWordCount) / timer.value))\n        const accuracy = ((totalCorrectKeyCount || 0 + currentCorrectKeyCount || 0) /\n            (totalKeyCount || 0 + currentKeyCount || 0))\n        const results = {\n            userId: 1,\n            totalWordCount: total + currentWordCount,\n            timer: timer.value,\n            category,\n            wordsPerMin,\n            accuracy\n        }\n        dispatch({ type: 'SET_TEST_RESULTS', results })\n    }\n}\n\nexport const reset = () => {\n    return (dispatch) => {\n        dispatch({ type: 'RESET' })\n    }\n}\n\n","import React, { useState, useRef, useEffect } from 'react'\n\nconst Dropdown = ({ title, header, resetThenSet, list }) => {\n    const [isListOpen, setIsListOpen] = useState(false);\n\n    const toggleList = () => {\n        setIsListOpen(!isListOpen)\n    }\n\n    const closeList = () => {\n        setIsListOpen(false)\n    }\n\n    const selectItem = (item) => {\n        const { id, key } = item;\n        resetThenSet(id, key)\n        setIsListOpen(false)\n    }\n\n    const handleClick = e => {\n        if (ddRef.current.contains(e.target)) {\n            return;\n        }\n        setIsListOpen(false)\n    };\n\n    useEffect(() => {\n        // add when mounted\n        document.addEventListener(\"mousedown\", handleClick);\n        // return function to be called when unmounted\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClick);\n        };\n    }, []);\n\n    const ddRef = useRef();\n    return (\n        <div ref={ddRef} className=\"dd-wrapper\">\n            <p>{title}</p>\n            <button\n                type=\"button\"\n                className=\"dd-header\"\n                onClick={toggleList}\n            >\n                <div className=\"dd-header-title\">{header}</div>\n                {isListOpen\n                    ? \"-\"\n                    : \"+\"}\n            </button>\n            {isListOpen && (\n                <div\n                    role=\"list\"\n                    className=\"dd-list\"\n                >\n                    {list.map((item) => (\n                        <button\n                            type=\"button\"\n                            className={item.value === header ? \"dd-list-item dd-active\" : \"dd-list-item\"}\n                            key={item.id}\n                            onClick={() => selectItem(item)}\n                        >\n                            {item.value}\n                        </button>\n                    ))}\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default Dropdown\n","export const timers = [\n        { id: 0, value: 30, selected: false, key: \"timer\" },\n        { id: 1, value: 60, selected: false, key: \"timer\" },\n        { id: 2, value: 300, selected: false, key: \"timer\" },\n        { id: 3, value: 600, selected: false, key: \"timer\" },\n        { id: 4, value: 10, selected: false, key: \"timer\" }]\n\nexport const categories = [\n        { id: 0, value: \"Any\", dbLabel: null, selected: false, key: \"category\" },\n        { id: 1, value: \"Facts\", dbLabel: \"fact\", selected: false, key: \"category\", tags: [\"Letters only\", \"Letters & Numbers\", \"Letters, Numbers, & Punctuation\"] },\n        { id: 2, value: \"Quotes\", dbLabel: \"quote\", selected: false, key: \"category\" },\n        { id: 3, value: \"Music\", dbLabel: \"song\", selected: false, key: \"category\", tags: [\"Any\", \"R&B\", \"Pop\", \"Rock\"] },\n        { id: 4, value: \"Star Wars\", dbLabel: \"star_wars\", selected: false, key: \"category\", tags: [\"Any\", \"1-3\", \"4-6\", \"7-9\"] }]\n","import React, { useEffect, useRef } from 'react'\nimport { setTimer, setCategory, setShowKeyboard, setRequireAccuracy } from '../../store/actions/testActions'\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport Dropdown from './Dropdown'\nimport { timers, categories } from './settingOptions'\n\nconst Settings = ({ setShowSettings }) => {\n    const {\n        timer,\n        category,\n        showKeyboard,\n        requireAccuracy\n    } = useSelector(state => ({\n        timer: state.test.timer,\n        category: state.test.category,\n        showKeyboard: state.test.showKeyboard,\n        requireAccuracy: state.test.requireAccuracy,\n    }), shallowEqual);\n\n    const dispatch = useDispatch();\n\n    const resetThenSet = (id, key) => {\n        let temp;\n        switch (key) {\n            case \"timer\":\n                temp = [...timers]\n                temp.forEach((item) => item.selected = false);\n                temp[id].selected = true;\n                dispatch(setTimer(temp[id]))\n                break;\n            case \"category\":\n                temp = [...categories]\n                temp.forEach((item) => item.selected = false);\n                temp[id].selected = true;\n                dispatch(setCategory(temp[id]))\n                break;\n            default:\n                console.log(\"default\", key)\n        }\n    }\n\n    const handleClick = e => {\n        if (settings.current.contains(e.target) && e.target.id !== \"settings-colse-icon\") {\n            return;\n        }\n        setShowSettings(false)\n    };\n\n    useEffect(() => {\n        // add when mounted\n        document.addEventListener(\"mousedown\", handleClick);\n        // return function to be called when unmounted\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClick);\n        };\n    }, []);\n\n    const setCheckboxValue = (e) => {\n        if (e.target.id === \"showKeyboard\") {\n            dispatch(setShowKeyboard(!showKeyboard))\n        } else if (e.target.id === \"requireAccuracy\") {\n            dispatch(setRequireAccuracy(!requireAccuracy))\n        }\n    }\n\n    const settings = useRef();\n    return (\n        <div ref={settings}>\n            <p className=\"settings-header\">Settings <span id=\"settings-colse-icon\">✖️</span></p>\n            <Dropdown title={\"Timer\"} list={timers} header={timer.value} resetThenSet={resetThenSet} />\n            <Dropdown title={\"Category\"} list={categories} header={category.value} resetThenSet={resetThenSet} />\n            <div>\n                <label className=\"checkbox-wrapper\">\n                    <input\n                        checked={showKeyboard}\n                        onChange={setCheckboxValue}\n                        type=\"checkbox\"\n                        id=\"showKeyboard\"\n                    />\n                    Show Keyboard\n                </label>\n            </div>\n            <div>\n                <label className=\"checkbox-wrapper\">\n                    <input\n                        checked={requireAccuracy}\n                        onChange={setCheckboxValue}\n                        type=\"checkbox\"\n                        id=\"requireAccuracy\"\n                    />\n                    Require Accuracy\n                </label>\n            </div>\n        </div>\n    )\n}\n\nexport default Settings\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { NavLink } from \"react-router-dom\";\nimport \"./Navbar.css\"\nimport Settings from '../tools/Settings';\n\nconst Navbar = ({ toggleShowSettings }) => {\n    const { store } = useSelector(state => ({\n        store: state\n    }), shallowEqual);\n\n\n    return (\n        <nav>\n            <ul>\n                <li>\n                    <NavLink className=\"navlink\" to=\"/\">Home</NavLink>\n                </li>\n                <li>\n                    <NavLink className=\"navlink\" to=\"/history\">History</NavLink>\n                </li>\n                <li>\n                    <NavLink className=\"navlink\" to=\"/\">Logout</NavLink>\n                </li>\n                <li className=\"nav-icon\" onClick={toggleShowSettings}>⚙️</li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Navbar\n","import React, { useEffect } from 'react'\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport { getRandomText, setUserInput, updateTotalCounts } from '../../store/actions/testActions'\n\nconst TestText = () => {\n    const {\n        input,\n        text,\n        category,\n        requireAccuracy\n    } = useSelector(state => ({\n        input: state.test.input,\n        text: state.test.text,\n        category: state.test.category,\n        requireAccuracy: state.test.requireAccuracy,\n    }), shallowEqual);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (text.content !== \"\") {\n            if ((requireAccuracy && text.content === input) ||\n                (!requireAccuracy && text.content.length === input.length)) {\n                dispatch(updateTotalCounts())\n                dispatch(getRandomText(category))\n                dispatch(setUserInput(\"\"))\n            }\n        }\n    }, [input])\n\n\n    const textLetters = text.content && text.content.split(\"\")\n    const inputLetters = input.split(\"\")\n    return (\n        <div className=\"container-a\">\n            <div className=\"user-input-display\">\n                {textLetters && textLetters.length > 0 && textLetters.map((letter, idx) => (\n                    <span key={idx} className={idx === inputLetters.length ? \"active-letter\" :\n                        idx > inputLetters.length ? \"\" :\n                            letter === inputLetters[idx] ? \"correct\" : \"incorrect\"}>\n                        {letter}\n                    </span>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default TestText\n\n// const textLines = text.content && text.content.split('\\n')\n//     const inputLetters = input.split(\"\")\n\n//     return (<div className=\"user-input-display\">\n//         {textLines && textLines.map(line => {\n//             let textLetters = line.split(\"\")\n//             return (\n//                 <>\n//                     {\n//                         textLetters && textLetters.length > 0 && textLetters.map((letter, idx) => (\n//                             <span key={idx} className={idx === inputLetters.length ?\n//                                 \"active-letter\" : idx > inputLetters.length ? \"\" : letter === inputLetters[idx] ?\n//                                     \"correct\" : \"incorrect\"}>{letter}</span>\n//                         ))\n//                     }\n//                     <br />\n//                 </>\n//             )\n//         })\n//         }\n//     </div>\n//     )\n// }\n","import React from \"react\";\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport { setUserInput } from '../../store/actions/testActions'\n\n\nconst UserInput = () => {\n    const {\n        input,\n        text\n    } = useSelector(state => ({\n        input: state.test.input,\n        text: state.test.text,\n    }), shallowEqual);\n    const dispatch = useDispatch();\n\n    return (\n        <div>\n            {text.content &&\n                <textarea\n                    autoFocus\n                    value={input}\n                    onChange={(e) => dispatch(setUserInput(e.target.value))}\n                    className=\"user-input\"\n                />\n            }\n        </div>\n    )\n}\n\nexport default UserInput\n","import React from 'react'\nimport { useSelector, shallowEqual } from 'react-redux';\n\nconst Results = () => {\n    const {\n        results\n    } = useSelector(state => ({\n        results: state.test.results\n    }), shallowEqual);\n\n    const { category, timer, totalWordCount, accuracy, wordsPerMin } = results || {};\n    const percentAccuracy = Math.floor(accuracy * 100)\n    return (\n        <div>\n            {results && Object.keys(results).length > 0 && <div>\n                <h2>Results</h2>\n                <ul>\n                    <li>Words/Minute: {wordsPerMin}</li>\n                    <li>Accuracy: {percentAccuracy}%</li>\n                    <li>Word Count: {totalWordCount}</li>\n                    <li>Timer: {timer} seconds</li>\n                    <li>Category: {category.value}</li>\n                </ul>\n            </div>}\n        </div>\n    )\n}\n\nexport default Results\n","import React, { useState, useEffect } from \"react\";\nimport TestText from './TestText'\nimport UserInput from './UserInput'\nimport Results from '../tools/Results'\nimport './Test.css'\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\n\nconst Test = () => {\n    const {\n        input,\n        text,\n        category,\n        results\n    } = useSelector(state => ({\n        input: state.test.input,\n        text: state.test.text,\n        category: state.test.category,\n        results: state.test.results\n    }), shallowEqual);\n    console.log(\"?\", results)\n\n    if (!text.content) {\n        return <div className=\"card\">\n            <div className=\"test-area\">\n                {results && <Results />}\n                {Object.keys(results).length === 0 && <h2>Test Area</h2>}\n            </div>\n        </div>\n    }\n    return (\n        <div className=\"card\">\n            <TestText />\n            <UserInput />\n        </div>\n    )\n}\n\nexport default Test\n","import { useEffect, useRef } from 'react'\n\nfunction useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest function.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nexport default useInterval","import React, { useState } from 'react'\nimport \"./Tool.css\"\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport useInterval from './useInterval'\nimport { getFirstRandomText, createTestRecod, reset } from '../../store/actions/testActions'\n\nconst Timer = ({ count, setCount }) => {\n    const {\n        timer,\n        category\n    } = useSelector(state => ({\n        timer: state.test.timer,\n        category: state.test.category\n    }), shallowEqual);\n\n    const delay = 1000;\n    const [isRunning, setIsRunning] = useState(false);\n    const dispatch = useDispatch();\n\n    useInterval(() => {\n        if (count === timer.value - 1) {\n            dispatch(createTestRecod())\n        }\n        setCount(count + 1);\n    }, isRunning && count < timer.value ? delay : null);\n\n\n    function handleStopTimer() {\n        dispatch(reset())\n        setCount(0);\n        setIsRunning(false);\n    }\n\n    function handleStartTimer() {\n        dispatch(getFirstRandomText(category))\n        setCount(0);\n        setIsRunning(true);\n    }\n    return (\n        <div>\n            <div className=\"timer-container\">\n                <div className=\"timer glow-timer\"> {/*className=\"timer glow - timer\"*/}\n                    {timer.value - count}\n                </div>\n                <div className=\"timer-container-footer\">\n                    <button onClick={handleStartTimer}>▶️</button>\n                    <button onClick={handleStopTimer}>⏹️</button>\n                </div>\n            </div >\n        </div>\n    );\n}\n\nexport default Timer\n","export const helpKeys = {\n    rowOne: [\n        {\n            value: '~',\n            class: 'key one'\n        },\n        {\n            value: 1,\n            class: 'key one'\n        },\n        {\n            value: 2,\n            class: 'key one'\n        },\n        {\n            value: 3,\n            class: 'key one'\n        },\n        {\n            value: 4,\n            class: 'key one'\n        },\n        {\n            value: 5,\n            class: 'key one'\n        },\n        {\n            value: 6,\n            class: 'key one'\n        },\n        {\n            value: 7,\n            class: 'key one'\n        },\n        {\n            value: 8,\n            class: 'key one'\n        },\n        {\n            value: 9,\n            class: 'key one'\n        },\n        {\n            value: 0,\n            class: 'key one'\n        },\n        {\n            value: \"-\",\n            class: 'key one'\n        },\n        {\n            value: '=',\n            class: 'key one'\n        },\n        {\n            value: 'del',\n            class: 'key two'\n        }\n    ],\n    rowTwo: [\n        {\n            value: 'tab',\n            class: 'key one-one-half l'\n        },\n        {\n            value: \"q\",\n            class: 'key one'\n        },\n        {\n            value: \"w\",\n            class: 'key one'\n        },\n        {\n            value: \"e\",\n            class: 'key one'\n        },\n        {\n            value: \"r\",\n            class: 'key one'\n        },\n        {\n            value: \"t\",\n            class: 'key one'\n        },\n        {\n            value: \"y\",\n            class: 'key one'\n        },\n        {\n            value: \"u\",\n            class: 'key one'\n        },\n        {\n            value: \"i\",\n            class: 'key one'\n        },\n        {\n            value: \"o\",\n            class: 'key one'\n        },\n        {\n            value: \"p\",\n            class: 'key one'\n        },\n        {\n            value: \"[\",\n            class: 'key one'\n        },\n        {\n            value: ']',\n            class: 'key one'\n        },\n        {\n            value: \"\\\\\",\n            class: 'key one'\n        }\n    ],\n    rowThree: [\n        {\n            value: 'cap',\n            class: 'key one-one-half l'\n        },\n        {\n            value: \"a\",\n            class: 'key one home-row'\n        },\n        {\n            value: \"s\",\n            class: 'key one home-row'\n        },\n        {\n            value: \"d\",\n            class: 'key one home-row'\n        },\n        {\n            value: \"f\",\n            class: 'key one home-row'\n        },\n        {\n            value: \"g\",\n            class: 'key one'\n        },\n        {\n            value: \"h\",\n            class: 'key one'\n        },\n        {\n            value: \"j\",\n            class: 'key one home-row'\n        },\n        {\n            value: \"k\",\n            class: 'key one home-row'\n        },\n        {\n            value: \"l\",\n            class: 'key one home-row'\n        },\n        {\n            value: \";\",\n            class: 'key one home-row'\n        },\n        {\n            value: `'`,\n            class: 'key one'\n        },\n        {\n            value: 'enter',\n            class: 'key two r'\n        }\n    ],\n    rowFour: [\n        {\n            value: 'shift',\n            class: 'key two-two-half l'\n        },\n        {\n            value: \"z\",\n            class: 'key one'\n        },\n        {\n            value: \"x\",\n            class: 'key one'\n        },\n        {\n            value: \"c\",\n            class: 'key one'\n        },\n        {\n            value: \"v\",\n            class: 'key one'\n        },\n        {\n            value: \"b\",\n            class: 'key one'\n        },\n        {\n            value: \"n\",\n            class: 'key one'\n        },\n        {\n            value: \"m\",\n            class: 'key one'\n        },\n        {\n            value: \",\",\n            class: 'key one'\n        },\n        {\n            value: \".\",\n            class: 'key one'\n        },\n        {\n            value: \"/\",\n            class: 'key one'\n        },\n        {\n            value: \"shift\",\n            class: 'key two-two-half r'\n        }\n    ],\n    rowFive: [\n        {\n            value: \"ctrl\",\n            class: 'key two l'\n        },\n        {\n            value: \"alt\",\n            class: 'key two l'\n        },\n        {\n            value: \"spacebar\",\n            class: 'key five'\n        },\n        {\n            value: \"alt\",\n            class: 'key two l'\n        },\n        {\n            value: \"ctrl\",\n            class: 'key two l'\n        },\n        {\n            value: \"   \",\n            class: 'arrowkey-container two-two-half'\n        }\n    ]\n}\n\n\nexport const keyMap = {\n    \"a\": { value: \"a\", shift: \"none\" },\n    \"b\": { value: \"b\", shift: \"none\" },\n    \"c\": { value: \"c\", shift: \"none\" },\n    \"d\": { value: \"d\", shift: \"none\" },\n    \"e\": { value: \"e\", shift: \"none\" },\n    \"f\": { value: \"f\", shift: \"none\" },\n    \"g\": { value: \"g\", shift: \"none\" },\n    \"h\": { value: \"h\", shift: \"none\" },\n    \"i\": { value: \"i\", shift: \"none\" },\n    \"j\": { value: \"j\", shift: \"none\" },\n    \"k\": { value: \"k\", shift: \"none\" },\n    \"l\": { value: \"l\", shift: \"none\" },\n    \"m\": { value: \"m\", shift: \"none\" },\n    \"n\": { value: \"n\", shift: \"none\" },\n    \"o\": { value: \"o\", shift: \"none\" },\n    \"p\": { value: \"p\", shift: \"none\" },\n    \"q\": { value: \"q\", shift: \"none\" },\n    \"r\": { value: \"r\", shift: \"none\" },\n    \"s\": { value: \"s\", shift: \"none\" },\n    \"t\": { value: \"t\", shift: \"none\" },\n    \"u\": { value: \"u\", shift: \"none\" },\n    \"v\": { value: \"v\", shift: \"none\" },\n    \"w\": { value: \"w\", shift: \"none\" },\n    \"x\": { value: \"x\", shift: \"none\" },\n    \"y\": { value: \"y\", shift: \"none\" },\n    \"z\": { value: \"z\", shift: \"none\" },\n    \"A\": { value: \"a\", shift: \"right\" },\n    \"B\": { value: \"b\", shift: \"left\" },\n    \"C\": { value: \"c\", shift: \"right\" },\n    \"D\": { value: \"d\", shift: \"right\" },\n    \"E\": { value: \"e\", shift: \"right\" },\n    \"F\": { value: \"f\", shift: \"right\" },\n    \"G\": { value: \"g\", shift: \"right\" },\n    \"H\": { value: \"h\", shift: \"left\" },\n    \"I\": { value: \"i\", shift: \"left\" },\n    \"J\": { value: \"j\", shift: \"left\" },\n    \"K\": { value: \"k\", shift: \"left\" },\n    \"L\": { value: \"l\", shift: \"left\" },\n    \"M\": { value: \"m\", shift: \"left\" },\n    \"N\": { value: \"n\", shift: \"left\" },\n    \"O\": { value: \"o\", shift: \"left\" },\n    \"P\": { value: \"p\", shift: \"left\" },\n    \"Q\": { value: \"q\", shift: \"right\" },\n    \"R\": { value: \"r\", shift: \"right\" },\n    \"S\": { value: \"s\", shift: \"right\" },\n    \"T\": { value: \"t\", shift: \"right\" },\n    \"U\": { value: \"u\", shift: \"left\" },\n    \"V\": { value: \"v\", shift: \"right\" },\n    \"W\": { value: \"w\", shift: \"right\" },\n    \"X\": { value: \"x\", shift: \"right\" },\n    \"Y\": { value: \"y\", shift: \"left\" },\n    \"Z\": { value: \"z\", shift: \"right\" },\n    0: { value: 0, shift: \"none\" },\n    1: { value: 1, shift: \"none\" },\n    2: { value: 2, shift: \"none\" },\n    3: { value: 3, shift: \"none\" },\n    4: { value: 4, shift: \"none\" },\n    5: { value: 5, shift: \"none\" },\n    6: { value: 6, shift: \"none\" },\n    7: { value: 7, shift: \"none\" },\n    8: { value: 8, shift: \"none\" },\n    9: { value: 9, shift: \"none\" },\n    \"-\": { value: \"-\", shift: \"none\" },\n    \"=\": { value: \"=\", shift: \"none\" },\n    \")\": { value: 0, shift: \"left\" },\n    \"!\": { value: 1, shift: \"right\" },\n    \"@\": { value: 2, shift: \"right\" },\n    \"#\": { value: 3, shift: \"right\" },\n    \"$\": { value: 4, shift: \"right\" },\n    \"%\": { value: 5, shift: \"right\" },\n    \"^\": { value: 6, shift: \"left\" },\n    \"&\": { value: 7, shift: \"left\" },\n    \"*\": { value: 8, shift: \"left\" },\n    \"(\": { value: 9, shift: \"left\" },\n    \"_\": { value: \"-\", shift: \"left\" },\n    \"+\": { value: \"=\", shift: \"left\" },\n    \"`\": { value: \"~\", shift: \"none\" },\n    \"~\": { value: \"~\", shift: \"right\" },\n    \",\": { value: \",\", shift: \"none\" },\n    \"<\": { value: \",\", shift: \"left\" },\n    \".\": { value: \".\", shift: \"none\" },\n    \">\": { value: \".\", shift: \"left\" },\n    \"/\": { value: \"/\", shift: \"left\" },\n    \"?\": { value: \"/\", shift: \"left\" },\n    \";\": { value: \";\", shift: \"none\" },\n    \":\": { value: \";\", shift: \"left\" },\n    \"'\": { value: `'`, shift: \"none\" },\n    '\"': { value: `\"`, shift: \"left\" },\n    \"’\": { value: `'`, shift: \"none\" },\n    'spacebar': { value: \"spacebar\", shift: \"none\" },\n    '\\n': { value: \"enter\", shift: \"none\" },\n}\n\n","import React from 'react'\nimport \"./Tool.css\"\nimport { helpKeys, keyMap } from './helpKeys'\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\n\nconst Help = () => {\n    const {\n        input,\n        text,\n        currentKey\n    } = useSelector(state => ({\n        input: state.test.input,\n        text: state.test.text,\n        currentKey: state.test.currentKey\n    }), shallowEqual);\n    const current = currentKey && keyMap[currentKey] ? keyMap[currentKey].value : \"\";\n    const shift = currentKey && keyMap[currentKey] ? keyMap[currentKey].shift : \"none\";\n    return (\n        <div className=\"keyboard\">\n            {Object.keys(helpKeys).map(row => (\n                <section className=\"key-row\" key={row}>\n                    {helpKeys[row].map((key, idx) => {\n                        let className = key.value === current ? `${key.class} active-key` : `${key.class}`\n                        if (shift === 'right' && row === \"rowFour\" && idx === 11) {\n                            className += ' active-key'\n                        } else if (shift === 'left' && row === \"rowFour\" && idx === 0) {\n                            className += ' active-key'\n                        }\n                        return <div key={`${key}-${idx}`} className={className}>{key.value}</div>\n                    })}\n                </section>\n            )\n            )}\n        </div>\n    )\n}\n\nexport default Help\n","import React from 'react'\nimport \"./Tool.css\"\nimport { useSelector, shallowEqual } from 'react-redux';\nconst WPM = ({ count }) => {\n    const {\n        totalWordCount,\n        currentWordCount,\n        timer,\n        results\n    } = useSelector(state => ({\n        totalWordCount: state.test.totalWordCount,\n        currentWordCount: state.test.currentWordCount,\n        timer: state.test.timer,\n        results: state.test.results\n    }), shallowEqual);\n\n    let wc = results && results.wordsPerMin ?\n        results.wordsPerMin : count ?\n            Math.floor(60 * ((totalWordCount + currentWordCount) / count)) :\n            0\n\n    return <h2>{wc} Words/Minute</h2>\n}\n\nexport default WPM\n","import React from 'react'\n\nconst TestRecord = ({ test, highest }) => {\n    const { create_date, category, timer, wordsPerMin, accuracy } = test || {};\n    let reg = /^\\w+,\\s\\d+\\s\\w+(?!\\d{4})/g\n    const formatedDate = create_date ? create_date.match(reg) : \"\"\n\n    return (\n        <tr>\n            <td>{wordsPerMin === highest && <span>✨ </span>}{formatedDate}</td>\n            <td>{wordsPerMin}</td>\n            <td>{accuracy}</td>\n            <td>{timer} sec.</td>\n            <td>{category}</td>\n        </tr>\n    )\n}\n\nexport default TestRecord;","import React, { useEffect } from 'react'\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport { getUserTests } from '../../store/actions/userActions'\nimport TestRecord from './TestRecord'\nconst TestResultChart = () => {\n    const {\n        results,\n        tests\n    } = useSelector(state => ({\n        results: state.test.results,\n        tests: state.user.tests\n    }), shallowEqual);\n\n    const dispatch = useDispatch();\n\n    // useEffect(() => {\n    //     dispatch(getUserTests())\n    // }, [])\n    let highest = Number.NEGATIVE_INFINITY;\n\n    for (let i = 0; i < tests.length; i++) {\n        if (tests[i].wordsPerMin > highest) {\n            highest = tests[i].wordsPerMin;\n        }\n    }\n\n    const tableBody = tests && tests.length > 0 ? tests.map(test => {\n        return <TestRecord key={test.id} test={test} highest\n            ={highest} />\n    }) : <tr>\n        <td colSpan=\"4\"> Nothing yet</td>\n    </tr>\n    if (!tests || tests.length === 0) {\n        return (<div></div>)\n    }\n    return (\n        <div style={{ margin: \"0 2em\" }}>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>Date</th>\n                        <th>W/M</th>\n                        <th>Accuracy</th>\n                        <th>Time</th>\n                        <th>Category</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {tableBody}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default TestResultChart\n","import React, { useRef, useState, useEffect } from 'react'\nimport { select, line, curveCardinal, axisLeft, scaleLinear } from 'd3'\nimport { useSelector, shallowEqual } from 'react-redux';\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nconst useResizeObserver = (ref) => {\n    const [dimensions, setDimensions] = useState(null);\n    useEffect(() => {\n        const observeTarget = ref.current;\n        const resizeObserver = new ResizeObserver((entries) => {\n            entries.forEach((entry) => {\n                setDimensions(entry.contentRect);\n            });\n        });\n        resizeObserver.observe(observeTarget);\n        return () => {\n            resizeObserver.unobserve(observeTarget);\n        };\n    }, [ref]);\n    return dimensions;\n};\n\n\nconst TestResultGraph = () => {\n    const {\n        tests\n    } = useSelector(state => ({\n        tests: state.user.tests\n    }), shallowEqual);\n\n    const svgRef = useRef();\n    const svgWrapper = useRef();\n    const dimensions = useResizeObserver(svgWrapper);\n\n    useEffect(() => {\n        const svg = select(svgRef.current);\n        if (!dimensions) return;\n        if (tests.length < 3) return;\n        let lowest = Number.POSITIVE_INFINITY;\n        let highest = Number.NEGATIVE_INFINITY;\n\n        for (let i = 0; i < tests.length; i++) {\n            if (tests[i].wordsPerMin > highest) {\n                highest = tests[i].wordsPerMin;\n            } else if (tests[i].wordsPerMin < lowest) {\n                lowest = tests[i].wordsPerMin;\n            }\n        }\n\n        const diff = (highest - lowest) / 5\n\n        const yScale = scaleLinear()\n            .domain([lowest - diff, highest + diff])\n            .range([dimensions.height, 0])\n\n\n        const yAxis = axisLeft(yScale).ticks(4);\n        svg\n            .select(\".y-axis\")\n            .call(yAxis)\n\n\n        const myLine = line()\n            .x((value, index) => index * (dimensions.width / (tests.length - 1)))\n            .y(value => yScale(value.wordsPerMin))\n            .curve(curveCardinal)\n\n        svg\n            .selectAll(\"path\")\n            .data([tests])\n            .join(\"path\")\n            .attr(\"class\", \"line\")\n            .attr(\"d\", value => myLine(value))\n            .attr(\"fill\", \"none\")\n\n    }, [tests, dimensions])\n\n\n    return (\n        <div className=\"svg-wrapper\" ref={svgWrapper}>\n            <svg ref={svgRef} width=\"100%\" height=\"100%\">\n                <g className=\"x-axis\" />\n                <g className=\"y-axis\" />\n            </svg>\n        </div>\n    )\n}\n\nexport default TestResultGraph\n","import React from 'react'\nimport { useSelector, shallowEqual } from 'react-redux';\nimport TestResultChart from './TestResultChart'\nimport TestResultGraph from './TestResultGraph'\nimport './history.css'\n\nconst History = () => {\n    const {\n        tests\n    } = useSelector(state => ({\n        tests: state.user.tests\n    }), shallowEqual);\n    const header = tests && tests.length > 0 ? <h2>Test Records</h2> : <h2>No Results Yet</h2>\n    return (\n        <section className=\"history\">\n\n            <div>\n                {header}\n                <TestResultGraph />\n                <TestResultChart />\n            </div>\n        </section>\n    )\n}\n\nexport default History\n","import React, { useState } from 'react'\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport Timer from './Timer'\nimport Help from './Help'\nimport Results from './Results'\nimport Settings from './Settings'\nimport WPM from './WPM'\n\nconst Tools = () => {\n    // const [toolTab, setToolTab] = useState(\"Results\")\n    // const onTabClick = (e) => {\n    //     e.preventDefault()\n    //     setToolTab(e.target.id)\n    // }\n    const [count, setCount] = useState(0);\n    const {\n        showKeyboard,\n        results\n    } = useSelector(state => ({\n        showKeyboard: state.test.showKeyboard,\n        results: state.test.results\n    }), shallowEqual);\n\n    return (\n        <div className=\"tools\">\n            <Timer count={count} setCount={setCount} />\n            <div className=\"wpm\">\n                <WPM count={count} />\n            </div>\n            {showKeyboard && <Help />}\n        </div>\n    )\n}\n\nexport default Tools\n","import React from 'react'\n\nconst Achievements = () => {\n    return (\n        <div >\n            <h1>Achievements</h1>\n        </div>\n    )\n}\n\nexport default Achievements\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport './App.css';\nimport Navbar from \"./components/navbar/Navbar\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Test from \"./components/test/Test\"\nimport Timer from \"./components/tools/Timer\"\nimport Help from \"./components/tools/Help\"\nimport WPM from \"./components/tools/WPM\"\nimport History from './components/history/History';\nimport Tools from \"./components/tools/Tools\"\nimport Settings from \"./components/tools/Settings\"\nimport Achievements from \"./components/history/Achievements\"\n\nfunction App() {\n  const [text, setText] = useState({})\n\n  const [showSettings, setShowSettings] = useState(false);\n\n  const toggleShowSettings = () => {\n    setShowSettings(!showSettings)\n  }\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <main>\n              <div>\n                <Navbar toggleShowSettings={toggleShowSettings} />\n                {showSettings &&\n                  <Settings setShowSettings={setShowSettings}\n                  />}\n                <Tools />\n              </div>\n              <Test />\n            </main>\n          </Route>\n          <Route path=\"/history\">\n            <main>\n              <div>\n                <Navbar toggleShowSettings={toggleShowSettings} />\n                {showSettings &&\n                  <Settings setShowSettings={setShowSettings}\n                  />}\n                <Achievements />\n              </div>\n              <History />\n            </main>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nconst initState = {\n    timer: { id: 0, value: 30, selected: false, key: \"timer\" },\n    input: \"\",\n    text: \"\",\n    totalWordCount: 0,\n    currentWordCount: 0,\n    totalKeyCount: 0,\n    currentKeyCount: 0,\n    totalCorrectKeyCount: 0,\n    currentCorrectKeyCount: 0,\n    results: {},\n    category: { id: 0, value: \"Any\", dbLabel: null, selected: false, key: \"category\" },\n    currentKey: '',\n    showKeyboard: true,\n    requireAccuracy: false,\n}\n\nconst testReducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"SET_USER_INPUT\":\n            // console.log(\"SET_USER_INPUT ?\", action)\n            return {\n                ...state,\n                input: action.input,\n                currentKey: action.currentKey,\n                currentWordCount: action.currentWordCount,\n                currentKeyCount: action.currentKeyCount,\n                currentCorrectKeyCount: action.currentCorrectKeyCount,\n            }\n        case \"SET_TIMER\":\n            console.log(\"SET_TIMER\")\n            return {\n                ...state,\n                timer: action.timer\n            }\n        case \"SET_CATEGORY\":\n            console.log(\"SET_CATEGORY\")\n            return {\n                ...state,\n                category: action.category\n            }\n        case \"SET_SHOW_KEYBOARD\":\n            console.log(\"SET_SHOW_KEYBOARD\")\n            return {\n                ...state,\n                showKeyboard: action.showKeyboard\n            }\n        case \"SET_REQUIRE_ACCURACY\":\n            console.log(\"SET_REQUIRE_ACCURACY\")\n            return {\n                ...state,\n                requireAccuracy: action.requireAccuracy\n            }\n        case \"SET_TEXT\":\n            console.log(\"SET_TEXT\", action.text)\n            return {\n                ...state,\n                text: action.text,\n                input: \"\",\n                currentKey: action.text.content[0]\n            }\n        case \"SET_FIRST_TEXT\":\n            console.log(\"SET_FIRTS_TEXT\", action.text)\n            return {\n                ...state,\n                text: action.text,\n                input: \"\", textinput: \"\",\n                totalWordCount: 0,\n                currentWordCount: 0,\n                totalKeyCount: 0,\n                currentKeyCount: 0,\n                totalCorrectKeyCount: 0,\n                currentCorrectKeyCount: 0,\n                results: {},\n                currentKey: action.text.content[0]\n            }\n        case \"SET_TOTALS\":\n            console.log(\"SET_TOTALS\")\n            return {\n                ...state,\n                totalWordCount: action.totalWordCount,\n                currentWordCount: 0,\n                totalKeyCount: action.totalKeyCount,\n                // currentKeyCount: 0,\n                totalCorrectKeyCount: action.totalCorrectKeyCount,\n                // currentCorrectKeyCount: 0,\n            }\n        case \"SET_TEST_RESULTS\":\n            console.log(\"SET_TEST_RESULTS\")\n            console.log(\"RESULTS:\", action.results)\n            return {\n                ...state,\n                results: action.results,\n                input: \"\",\n                text: \"\",\n                currentKey: \"\",\n                accuracy: action.accuracy\n            }\n        case \"RESET\":\n            console.log(\"REST\")\n            return {\n                ...state,\n                text: { content: \"\" },\n                input: \"\",\n                totalWordCount: 0,\n                currentWordCount: 0,\n                results: {},\n                currentKey: \"\"\n            }\n        default:\n            return state;\n    }\n}\n\nconst persistConfig = {\n    key: 'test',\n    storage: storage\n};\n\nexport default persistReducer(persistConfig, testReducer);\n\n\n","import storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nconst initState = {\n    id: 1,\n    name: \"Test User\",\n    email: \"test@e.mail\",\n    tests: [],\n    isAuthenticated: false,\n}\n\nconst userReducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"LOGIN\":\n            console.log(\"LOGIN\")\n            return {\n                ...state,\n                name: action.user.name,\n                email: action.user.email\n            }\n\n        case \"LOGOUT\":\n            console.log(\"LOGOUT\")\n            return initState\n\n        case \"SET_USER_TESTS\":\n            console.log(\"GET_USER_TESTS\")\n            return {\n                ...state,\n                tests: action.tests\n            }\n        default:\n            return state;\n    }\n}\n\nconst persistConfig = {\n    key: 'user',\n    storage: storage\n};\n\nexport default persistReducer(persistConfig, userReducer);\n\n\n","import { combineReducers } from 'redux'\nimport testReducer from './testReducer'\nimport userReducer from './userReducer'\n\nconst rootReducer = combineReducers({\n    test: testReducer,\n    user: userReducer\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './store/reducers/rootReducer'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = createStore(persistedReducer, applyMiddleware(thunk));\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}