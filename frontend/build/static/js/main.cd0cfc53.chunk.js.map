{"version":3,"sources":["components/navbar/Navbar.js","components/test/TestText.js","components/test/UserInput.js","store/actions/testActions.js","components/test/Test.js","components/tools/Timer.js","components/tools/Help.js","components/tools/WPM.js","components/history/TestResultChart.js","components/history/TestResultGraph.js","components/history/Achievements.js","components/history/History.js","components/tools/Tools.js","App.js","store/reducers/testReducer.js","store/reducers/rootReducer.js","index.js"],"names":["Navbar","store","useSelector","state","shallowEqual","console","log","className","to","TestText","input","test","textLetters","split","inputLetters","map","letter","idx","length","UserInput","dispatch","useDispatch","value","onChange","e","type","setUserInput","target","Test","Timer","timer","time","id","onClick","startTime","Date","counter","interv","setInterval","clearInterval","newTime","Math","floor","Help","WPM","TestResultChart","TestResultGraph","Achievements","History","Tools","App","useState","exact","path","initState","persistConfig","key","storage","persistReducer","action","rootReducer","combineReducers","testReducer","persistedReducer","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd0cfc53.chunk.js","sourcesContent":["import React from 'react'\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { NavLink } from \"react-router-dom\";\nimport \"./Navbar.css\"\n\nconst Navbar = () => {\n    const { store } = useSelector(state => ({\n        store: state\n    }), shallowEqual);\n\n    console.log(store)\n    return (\n        <nav>\n            <ul>\n                <li>\n                    <NavLink className=\"navlink\" to=\"/\">Home</NavLink>\n                </li>\n                <li>\n                    <NavLink className=\"navlink\" to=\"/\">Settings</NavLink>\n                </li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\nimport { useSelector, shallowEqual } from 'react-redux';\n\nconst TestText = () => {\n    const {\n        input\n    } = useSelector(state => ({\n        input: state.test.input\n    }), shallowEqual);\n\n    const text = { content: 'Happiness is the reward we get for living to the highest right we know. Happiness is the reward we get for living to the highest right we know. Happiness is the reward we get for living to the highest right we know. Happiness is the reward we get for living to the highest right we know. Happiness is the reward we get for living to the highest right we know. Happiness is the reward we get for living to the highest right we know. Happiness is the reward we get for living to the highest right we know. hvj kubiubiu' }\n    const textLetters = text.content.split(\"\")\n    const inputLetters = input.split(\"\")\n    return (\n        <div className=\"quote-display\">\n            {textLetters.map((letter, idx) => (\n                <span key={idx} className={idx >= inputLetters.length ? \"\" : letter === inputLetters[idx] ? \"correct\" : \"incorrect\"}>{letter}</span>\n            ))}\n        </div>\n    )\n}\n\nexport default TestText\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport { setUserInput } from '../../store/actions/testActions'\nconst UserInput = () => {\n    const {\n        input\n    } = useSelector(state => ({\n        input: state.test.input\n    }), shallowEqual);\n    const dispatch = useDispatch();\n\n    return (\n        <textarea\n            value={input}\n            onChange={(e) => dispatch(setUserInput(e.target.value))}\n            className=\"quote-input\"\n        />\n    )\n}\n\nexport default UserInput\n","export const setUserInput = (input) => {\n    return (dispatch) => {\n        dispatch({ type: 'SET_USERINPUT', input })\n    }\n}\n\nexport const setTimer = (timer) => {\n    return (dispatch) => {\n        dispatch({ type: 'SET_TIMER', timer })\n    }\n}\n\nexport const startTimer = () => {\n    return (dispatch) => {\n        let startTime = new Date()\n        setInterval(() => {\n            let newTime = Math.floor((new Date() - startTime) / 1000)\n            dispatch({ type: 'SET_TIME', time: newTime })\n        }, 1000)\n    }\n}\n\nexport const resetTime = () => {\n    return (dispatch) => {\n        dispatch({ type: 'RESET_TIME' })\n    }\n}","import React, { useState, useEffect } from \"react\";\nimport TestText from './TestText'\nimport UserInput from './UserInput'\nimport './Test.css'\n\nconst Test = () => {\n    return (\n        <div className=\"card\">\n            <TestText />\n            <UserInput />\n        </div>\n    )\n}\n\nexport default Test\n","import React, { useState } from 'react'\nimport \"./Tool.css\"\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport { startTimer, resetTime } from '../../store/actions/testActions';\n\nconst Timer = () => {\n    const {\n        timer,\n        time\n    } = useSelector(state => ({\n        timer: state.test.timer,\n        time: state.test.time\n    }), shallowEqual);\n    const dispatch = useDispatch();\n    // const onGoClick = () => {\n    //     console.log(\"click\")\n    //     dispatch(startTimer(timer))\n    // }\n\n    const onResetClick = () => {\n        console.log(\"click\")\n        dispatch(resetTime())\n    }\n\n    const startTimer = () => {\n        let startTime = new Date()\n        let counter = 0;\n        let interv = setInterval(() => {\n            if (counter === timer - 1) {\n                clearInterval(interv)\n            }\n            let newTime = Math.floor((new Date() - startTime) / 1000)\n            counter++;\n            dispatch({ type: 'SET_TIME', time: newTime })\n        }, 1000)\n    }\n\n    return (\n        <div className=\"timer\" id=\"timer\">\n            {timer - time}\n            <button onClick={startTimer}>GO!</button>\n            <button onClick={onResetClick}>RESET!</button>\n        </div>\n    )\n}\n\nexport default Timer\n","import React from 'react'\nimport \"./Tool.css\"\n\nconst Help = () => {\n    return (\n        <div className=\"tool-card\">\n            <h1>Help</h1>\n        </div>\n    )\n}\n\nexport default Help\n","import React from 'react'\nimport \"./Tool.css\"\nimport { useSelector, shallowEqual } from 'react-redux';\nconst WPM = () => {\n    const {\n        input,\n        timer,\n        time\n    } = useSelector(state => ({\n        input: state.test.input,\n        timer: state.test.timer,\n        time: state.test.time\n    }), shallowEqual);\n    console.log(\"input?\", input.length)\n\n    return (\n        <div className=\"tool-card\">\n            <h1>{time > 0 && input.length > 0 && Math.floor(60 * (input.split(\" \").length / time))} W/M</h1>\n        </div>\n    )\n}\n\nexport default WPM\n","import React from 'react'\n\nconst TestResultChart = () => {\n    return (\n        <div>\n            <h1>TestResultChart</h1>\n        </div>\n    )\n}\n\nexport default TestResultChart\n","import React from 'react'\n\nconst TestResultGraph = () => {\n    return (\n        <div>\n            <h1>TestResultGraph</h1>\n        </div>\n    )\n}\n\nexport default TestResultGraph\n","import React from 'react'\n\nconst Achievements = () => {\n    return (\n        <div className=\"history-card\">\n            <h1>Achievements</h1>\n        </div>\n    )\n}\n\nexport default Achievements\n","import React from 'react'\nimport TestResultChart from './TestResultChart'\nimport TestResultGraph from './TestResultGraph'\nimport Achievements from './Achievements'\nimport './history.css'\n\n\nconst History = () => {\n    return (\n        <section className=\"history\">\n            <div className=\"history-card\">\n                <TestResultChart />\n                <TestResultGraph />\n            </div>\n            <Achievements />\n        </section>\n    )\n}\n\nexport default History\n","import React from 'react'\nimport Timer from './Timer'\nimport Help from './Help'\nimport WPM from './WPM'\n\nconst Tools = () => {\n    return (\n        <div className=\"tools\">\n            <Help />\n            <Timer />\n            <WPM />\n        </div>\n    )\n}\n\nexport default Tools\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport './App.css';\nimport Navbar from \"./components/navbar/Navbar\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Test from \"./components/test/Test\"\nimport Timer from \"./components/tools/Timer\"\nimport Help from \"./components/tools/Help\"\nimport WPM from \"./components/tools/WPM\"\nimport History from './components/history/History';\nimport Tools from \"./components/tools/Tools\"\n\nfunction App() {\n  const [text, setText] = useState({})\n\n  // useEffect(() => {\n  //   axios.get('https://turbotype.herokuapp.com/api/text').then(response => {\n  //     console.log(\"SUCCESS\", response)\n  //     setText(response)\n  //   }).catch(error => {\n  //     console.log(error)\n  //   })\n  // }, [])\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <main>\n          <Switch>\n            <Route exact path=\"/\">\n              <Tools />\n              <Test />\n              {/* <div>{text.status === 200 ?\n                <h3>{text.data && text.data.length > 0 && (\n                  text.data.map((t) => <p key={t.id}>{t.content}</p>)\n                )}</h3>\n                :\n                <h3>LOADING</h3>}</div> */}\n            </Route>\n            <Route path=\"/history\">\n              <History />\n            </Route>\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nconst initState = {\n    timer: 30,\n    time: 0,\n    input: \"\"\n}\n\nconst testReducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"SET_USERINPUT\":\n            return {\n                ...state,\n                input: action.input\n            }\n        case \"SET_TIMER\":\n            return {\n                ...state,\n                timer: action.timer,\n                time: 0\n            }\n        case \"SET_TIME\":\n            return {\n                ...state,\n                time: action.time\n            }\n        case \"RESET_TIME\":\n            return {\n                ...state,\n                time: 0\n            }\n        default:\n            return state;\n    }\n}\n\nconst persistConfig = {\n    key: 'test',\n    storage: storage\n};\n\nexport default persistReducer(persistConfig, testReducer);","import { combineReducers } from 'redux'\nimport testReducer from './testReducer'\n\nconst rootReducer = combineReducers({\n    test: testReducer\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './store/reducers/rootReducer'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = createStore(persistedReducer, applyMiddleware(thunk));\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}