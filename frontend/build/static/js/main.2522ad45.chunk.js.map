{"version":3,"sources":["components/navbar/Navbar.js","store/actions/testActions.js","components/test/TestText.js","components/test/UserInput.js","components/test/Test.js","components/tools/useInterval.js","components/tools/WPM.js","components/tools/Timer.js","components/tools/Help.js","components/history/TestResultChart.js","components/history/TestResultGraph.js","components/history/Achievements.js","components/history/History.js","components/tools/Results.js","components/tools/Dropdown.js","components/tools/settingOptions.js","components/tools/Settings.js","components/tools/Tools.js","App.js","store/reducers/testReducer.js","store/reducers/rootReducer.js","index.js"],"names":["Navbar","useSelector","state","store","shallowEqual","className","to","setUserInput","input","dispatch","cwc","replace","trim","split","length","type","currentWordCount","TestText","test","text","category","useDispatch","useEffect","content","getState","totalWordCount","console","log","url","dbLabel","axios","get","then","response","data","catch","error","getRandomText","textLetters","inputLetters","map","letter","idx","UserInput","autoFocus","value","onChange","e","target","id","Test","useInterval","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","WPM","count","timer","results","wc","wordsPerMin","Math","floor","Timer","setCount","useState","isRunning","setIsRunning","testState","userId","onClick","getFirstRandomText","Help","TestResultChart","TestResultGraph","Achievements","History","Results","Object","keys","Dropdown","title","header","resetThenSet","list","isListOpen","setIsListOpen","role","item","key","selectItem","timers","selected","categories","tags","Settings","temp","forEach","setTimer","setCategory","Tools","toolTab","setToolTab","onTabClick","preventDefault","App","exact","path","initState","persistConfig","storage","persistReducer","action","textinput","rootReducer","combineReducers","testReducer","persistedReducer","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2522ad45.chunk.js","sourcesContent":["import React from 'react'\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { NavLink } from \"react-router-dom\";\nimport \"./Navbar.css\"\n\nconst Navbar = () => {\n    const { store } = useSelector(state => ({\n        store: state\n    }), shallowEqual);\n\n    // console.log(store)\n    return (\n        <nav>\n            <ul>\n                <li>\n                    <NavLink className=\"navlink\" to=\"/\">Home</NavLink>\n                </li>\n                <li>\n                    <NavLink className=\"navlink\" to=\"/\">Settings</NavLink>\n                </li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Navbar\n","import axios from 'axios'\n\nexport const setUserInput = (input) => {\n    return (dispatch) => {\n        const formattedInput = input.replace(/\\s+/g, ' ').trim();\n        let cwc = formattedInput.split(\" \").length;\n        dispatch({ type: 'SET_USER_INPUT', input, currentWordCount: cwc })\n    }\n}\n\nexport const updateTotalWordCount = () => {\n    return (dispatch, getState) => {\n        const twc = getState().test.totalWordCount\n        const cwc = getState().test.currentWordCount\n        dispatch({ type: 'SET_TOTAL_WC', totalWordCount: twc + cwc })\n    }\n}\n\nexport const setWordCount = (wordCount) => {\n    return (dispatch) => {\n        dispatch({ type: 'SET_TOTAL_WC', totalWordCount: wordCount })\n    }\n}\n\nexport const getRandomText = (category) => {\n    return (dispatch) => {\n        console.log('cat', category)\n        const url = category && category.dbLabel ? `https://turbotype.herokuapp.com/api/text/random?category=${category.dbLabel}` : `https://turbotype.herokuapp.com/api/text/random`\n        console.log(url)\n\n        axios.get(url)\n            .then(response => {\n                dispatch({ type: 'SET_TEXT', text: response.data })\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n}\n\nexport const getFirstRandomText = (category) => {\n    return (dispatch) => {\n        console.log('cat', category)\n        const url = category && category.dbLabel ? `https://turbotype.herokuapp.com/api/text/random?category=${category.dbLabel}` : `https://turbotype.herokuapp.com/api/text/random`\n        console.log(url)\n        // if (category) {\n        //     url += `?category=${category}`\n        // }\n        axios.get(url)\n            .then(response => {\n                dispatch({ type: 'SET_FIRST_TEXT', text: response.data })\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n}\n\nexport const setTimer = (timer) => {\n    return (dispatch) => {\n        dispatch({ type: 'SET_TIMER', timer })\n    }\n}\n\nexport const setCategory = (category) => {\n    return (dispatch) => {\n        dispatch({ type: 'SET_CATEGORY', category })\n    }\n}\n\nexport const createTestRecod = () => {\n    return (dispatch, getState) => {\n        const testState = getState().test\n        const { totalWordCount, currentWordCount, timer, category } = testState\n        // do we need the current?\n        const wordsPerMin = Math.floor(60 * ((totalWordCount + currentWordCount) / timer))\n        const results = {\n            userId: 1,\n            totalWordCount: totalWordCount + currentWordCount,\n            timer: timer.value,\n            category,\n            wordsPerMin\n        }\n        dispatch({ type: 'SET_TEST_RESULTS', results })\n    }\n}\n\nexport const reset = () => {\n    return (dispatch) => {\n        dispatch({ type: 'RESET' })\n    }\n}","import React, { useEffect } from 'react'\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport { getRandomText, setUserInput, updateTotalWordCount, createTestRecod } from '../../store/actions/testActions'\n\nconst TestText = () => {\n    const {\n        input,\n        text,\n        category\n    } = useSelector(state => ({\n        input: state.test.input,\n        text: state.test.text,\n        category: state.test.category\n    }), shallowEqual);\n    const dispatch = useDispatch();\n\n    // useEffect(() => {\n    //     console.log(\"TestText ue\")\n    //     dispatch(getRandomText())\n    // }, [])\n\n    useEffect(() => {\n        // async function updateWC() {\n        // await \n        // }\n        if (text.content !== \"\" && text.content === input) {\n            dispatch(updateTotalWordCount())\n            dispatch(getRandomText(category))\n            dispatch(setUserInput(\"\"))\n        }\n    }, [input])\n    const textLetters = text.content && text.content.split(\"\")\n    const inputLetters = input.split(\"\")\n    return (<div className=\"quote-display\">\n        {textLetters && textLetters.length > 0 && textLetters.map((letter, idx) => (\n            <span key={idx} className={idx === inputLetters.length ? \"active-letter\" : idx > inputLetters.length ? \"\" : letter === inputLetters[idx] ? \"correct\" : \"incorrect\"}>{letter}</span>\n        ))}\n    </div>\n    )\n}\n\nexport default TestText\n\n","import React from \"react\";\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport { setUserInput } from '../../store/actions/testActions'\n\n\nconst UserInput = () => {\n    const {\n        input,\n        text\n    } = useSelector(state => ({\n        input: state.test.input,\n        text: state.test.text,\n    }), shallowEqual);\n    const dispatch = useDispatch();\n\n    return (\n        <div>\n            {text.content &&\n                <textarea\n                    autoFocus\n                    value={input}\n                    onChange={(e) => dispatch(setUserInput(e.target.value))}\n                    className=\"user-input\"\n                />\n            }\n            {!text.content &&\n                <h1 id=\"test-area\">Test Area</h1>\n            }\n        </div>\n    )\n}\n\nexport default UserInput\n","import React, { useState, useEffect } from \"react\";\nimport TestText from './TestText'\nimport UserInput from './UserInput'\nimport './Test.css'\n\nconst Test = () => {\n    return (\n        <div className=\"card\">\n            <TestText />\n            <UserInput />\n        </div>\n    )\n}\n\nexport default Test\n","import { useEffect, useRef } from 'react'\n\nfunction useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest function.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nexport default useInterval","import React from 'react'\nimport \"./Tool.css\"\nimport { useSelector, shallowEqual } from 'react-redux';\nconst WPM = ({ count }) => {\n    const {\n        totalWordCount,\n        currentWordCount,\n        timer,\n        results\n    } = useSelector(state => ({\n        totalWordCount: state.test.totalWordCount,\n        currentWordCount: state.test.currentWordCount,\n        timer: state.test.timer,\n        results: state.test.results\n    }), shallowEqual);\n\n    let wc = results && results.wordsPerMin ?\n        results.wordsPerMin : count ?\n            Math.floor(60 * ((totalWordCount + currentWordCount) / count)) :\n            0\n\n    return (\n        <div>\n            <h2>{wc} Words/Minute</h2>\n        </div>\n    )\n}\n\nexport default WPM\n","import React, { useState } from 'react'\nimport \"./Tool.css\"\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport useInterval from './useInterval'\nimport { setWordCount, getFirstRandomText, getRandomText, createTestRecod, reset } from '../../store/actions/testActions'\nimport WPM from './WPM'\n\nconst Timer = ({ count, setCount }) => {\n    const {\n        timer,\n        category\n    } = useSelector(state => ({\n        timer: state.test.timer,\n        category: state.test.category\n    }), shallowEqual);\n\n    // const [count, setCount] = useState(0);\n    const delay = 1000;\n    const [isRunning, setIsRunning] = useState(false);\n    const dispatch = useDispatch();\n\n    useInterval(() => {\n        if (count === timer.value - 1) {\n            console.log(\"END TIMER LOGiC HERE!\")\n            dispatch(createTestRecod())\n        }\n        setCount(count + 1);\n    }, isRunning && count < timer.value ? delay : null);\n\n\n    function handleStopTimer() {\n        dispatch(reset())\n        setCount(0);\n        setIsRunning(false);\n    }\n\n    function handleStartTimer() {\n        // dispatch(reset())\n        dispatch(getFirstRandomText(category))\n        setCount(0);\n        setIsRunning(true);\n    }\n    return (\n        <div>\n            <div className=\"timer-container\">\n                <div className=\"timer glow-timer\"> {/*className=\"timer glow - timer\"*/}\n                    {timer.value - count}\n                </div>\n                <div className=\"timer-container-footer\">\n                    <button onClick={handleStartTimer}>▶️</button>\n                    <button onClick={handleStopTimer}>⏹️</button>\n                </div>\n            </div >\n            {/* <WPM count={count} isRunning={isRunning} /> */}\n        </div>\n    );\n}\n\nexport default Timer\n","import React from 'react'\nimport \"./Tool.css\"\n\nconst Help = () => {\n    return (\n        <div className=\"help-container\">\n            <h1>Help</h1>\n        </div>\n    )\n}\n\nexport default Help\n","import React from 'react'\n\nconst TestResultChart = () => {\n    return (\n        <div>\n            <h1>TestResultChart</h1>\n        </div>\n    )\n}\n\nexport default TestResultChart\n","import React from 'react'\n\nconst TestResultGraph = () => {\n    return (\n        <div>\n            <h1>TestResultGraph</h1>\n        </div>\n    )\n}\n\nexport default TestResultGraph\n","import React from 'react'\n\nconst Achievements = () => {\n    return (\n        <div className=\"history-card\">\n            <h1>Achievements</h1>\n        </div>\n    )\n}\n\nexport default Achievements\n","import React from 'react'\nimport TestResultChart from './TestResultChart'\nimport TestResultGraph from './TestResultGraph'\nimport Achievements from './Achievements'\nimport './history.css'\n\n\nconst History = () => {\n    return (\n        <section className=\"history\">\n            <div className=\"history-card\">\n                <TestResultChart />\n                <TestResultGraph />\n            </div>\n            <Achievements />\n        </section>\n    )\n}\n\nexport default History\n","import React from 'react'\nimport { useSelector, shallowEqual } from 'react-redux';\nimport WPM from './WPM'\n\nconst Results = ({ count }) => {\n    const {\n        results\n    } = useSelector(state => ({\n        results: state.test.results\n    }), shallowEqual);\n\n    const { category, timer, totalWordCount } = results || {};\n\n    return (\n        <div>\n            <WPM count={count} />\n            {results && Object.keys(results).length > 0 && <div>\n                <ul>\n                    <li>Word Count: {totalWordCount}</li>\n                    <li>Timer: {timer} seconds</li>\n                    <li>Category: {category.value}</li>\n                </ul>\n            </div>}\n        </div>\n    )\n}\n\nexport default Results\n","import React, { useState } from 'react'\n\nconst Dropdown = ({ title, header, resetThenSet, list }) => {\n    const [isListOpen, setIsListOpen] = useState(false);\n\n    const toggleList = () => {\n        setIsListOpen(!isListOpen)\n    }\n\n    const closeList = () => {\n        setIsListOpen(false)\n    }\n\n    const selectItem = (item) => {\n        const { id, key } = item;\n        resetThenSet(id, key)\n        setIsListOpen(false)\n    }\n\n    return (\n        <div className=\"dd-wrapper\">\n            <p>{title}</p>\n            <button\n                type=\"button\"\n                className=\"dd-header\"\n                onClick={toggleList}\n            >\n                <div className=\"dd-header-title\">{header}</div>\n                {isListOpen\n                    ? \"-\"\n                    : \"+\"}\n            </button>\n            {isListOpen && (\n                <div\n                    role=\"list\"\n                    className=\"dd-list\"\n                >\n                    {list.map((item) => (\n                        <button\n                            type=\"button\"\n                            className={item.value === header ? \"dd-list-item dd-active\" : \"dd-list-item\"}\n                            key={item.id}\n                            onClick={() => selectItem(item)}\n                        >\n                            {item.value}\n                        </button>\n                    ))}\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default Dropdown\n","export const timers = [\n        { id: 0, value: 30, selected: false, key: \"timer\" },\n        { id: 1, value: 60, selected: false, key: \"timer\" },\n        { id: 2, value: 300, selected: false, key: \"timer\" },\n        { id: 3, value: 600, selected: false, key: \"timer\" }]\n\nexport const categories = [\n        { id: 0, value: \"Any\", dbLabel: null, selected: false, key: \"category\" },\n        { id: 1, value: \"Facts\", dbLabel: \"fact\", selected: false, key: \"category\", tags: [\"Letters only\", \"Letters & Numbers\", \"Letters, Numbers, & Punctuation\"] },\n        { id: 2, value: \"Quotes\", dbLabel: \"quote\", selected: false, key: \"category\" },\n        { id: 3, value: \"Music\", dbLabel: \"song\", selected: false, key: \"category\", tags: [\"Any\", \"R&B\", \"Pop\", \"Rock\"] },\n        { id: 4, value: \"Star Wars\", dbLabel: \"star_wars\", selected: false, key: \"category\", tags: [\"Any\", \"1-3\", \"4-6\", \"7-9\"] }]\n","import React from 'react'\nimport { setTimer, setCategory } from '../../store/actions/testActions'\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport Dropdown from './Dropdown'\nimport { timers, categories } from './settingOptions'\n\nconst Settings = () => {\n    const {\n        timer,\n        category,\n    } = useSelector(state => ({\n        timer: state.test.timer,\n        category: state.test.category\n    }), shallowEqual);\n\n    const dispatch = useDispatch();\n\n    const resetThenSet = (id, key) => {\n        let temp;\n        switch (key) {\n            case \"timer\":\n                temp = [...timers]\n                temp.forEach((item) => item.selected = false);\n                temp[id].selected = true;\n                dispatch(setTimer(temp[id]))\n                break;\n            case \"category\":\n                temp = [...categories]\n                temp.forEach((item) => item.selected = false);\n                temp[id].selected = true;\n                dispatch(setCategory(temp[id]))\n                break;\n            default:\n                console.log(\"default\", key)\n        }\n    }\n    console.log(\"settings\", timers, timer)\n    return (\n        <div>\n            <Dropdown title={\"Timer\"} list={timers} header={timer.value} resetThenSet={resetThenSet} />\n            <Dropdown title={\"Category\"} list={categories} header={category.value} resetThenSet={resetThenSet} />\n        </div>\n    )\n}\n\nexport default Settings\n","import React, { useState } from 'react'\nimport Timer from './Timer'\nimport Help from './Help'\nimport Results from './Results'\nimport Settings from './Settings'\n\nconst Tools = () => {\n    const [toolTab, setToolTab] = useState(\"Results\")\n    const onTabClick = (e) => {\n        e.preventDefault()\n        setToolTab(e.target.id)\n    }\n    const [count, setCount] = useState(0);\n\n    return (\n        <div className=\"tools\">\n            <Timer count={count} setCount={setCount} />\n            <Help />\n            <div className=\"tools-tab-container\">\n                <ul className=\"tools-tab\">\n                    <li className={toolTab === \"Results\" ? \"active\" : \"\"} id=\"Results\" onClick={e => onTabClick(e)}>Results</li>\n                    <li className={toolTab === \"Settings\" ? \"active\" : \"\"} id=\"Settings\" onClick={e => onTabClick(e)}>⚙️</li>\n                </ul>\n                {toolTab === \"Settings\" && <Settings />}\n                {toolTab === \"Results\" && <Results count={count} />}\n            </div>\n        </div>\n    )\n}\n\nexport default Tools\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport './App.css';\nimport Navbar from \"./components/navbar/Navbar\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Test from \"./components/test/Test\"\nimport Timer from \"./components/tools/Timer\"\nimport Help from \"./components/tools/Help\"\nimport WPM from \"./components/tools/WPM\"\nimport History from './components/history/History';\nimport Tools from \"./components/tools/Tools\"\n\nfunction App() {\n  const [text, setText] = useState({})\n\n  // useEffect(() => {\n  //   axios.get('https://turbotype.herokuapp.com/api/text').then(response => {\n  //     console.log(\"SUCCESS\", response)\n  //     setText(response)\n  //   }).catch(error => {\n  //     console.log(error)\n  //   })\n  // }, [])\n\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\">\n            <main>\n              <Tools />\n              <Test />\n            </main>\n          </Route>\n          <Route path=\"/history\">\n            <History />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nconst initState = {\n    timer: { id: 0, value: 30, selected: false, key: \"timer\" },\n    input: \"\",\n    text: \"\",\n    totalWordCount: 0,\n    currentWordCount: 0,\n    results: {},\n    category: { id: 0, value: \"Any\", dbLabel: null, selected: false, key: \"category\" }\n}\n\nconst testReducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"SET_USER_INPUT\":\n            console.log(\"SET_USER_INPUT\")\n            return {\n                ...state,\n                input: action.input,\n                currentWordCount: action.currentWordCount\n            }\n        case \"SET_TIMER\":\n            console.log(\"SET_TIMER\")\n            return {\n                ...state,\n                timer: action.timer\n            }\n        case \"SET_CATEGORY\":\n            console.log(\"SET_CATEGORY\")\n            return {\n                ...state,\n                category: action.category\n            }\n        case \"SET_TEXT\":\n            console.log(\"SET_TEXT\")\n            return {\n                ...state,\n                text: action.text,\n                input: \"\"\n            }\n        case \"SET_FIRST_TEXT\":\n            console.log(\"SET_FIRTS_TEXT\")\n            return {\n                ...state,\n                text: action.text,\n                input: \"\", textinput: \"\",\n                totalWordCount: 0,\n                currentWordCount: 0,\n                results: {}\n            }\n        case \"SET_TOTAL_WC\":\n            console.log(\"SET_TOTAL_WC\")\n            return {\n                ...state,\n                totalWordCount: action.totalWordCount,\n                currentWordCount: 0\n            }\n        case \"SET_TEST_RESULTS\":\n            console.log(\"SET_TEST_RESULTS\")\n            console.log(\"RESULTS:\", action.results)\n            return {\n                ...state,\n                results: action.results,\n                input: \"\",\n                text: \"\"\n            }\n        case \"RESET\":\n            console.log(\"REST\")\n            return {\n                ...state,\n                text: { content: \"\" },\n                input: \"\",\n                totalWordCount: 0,\n                currentWordCount: 0,\n                results: {}\n            }\n        default:\n            return state;\n    }\n}\n\nconst persistConfig = {\n    key: 'test',\n    storage: storage\n};\n\nexport default persistReducer(persistConfig, testReducer);\n\n\n","import { combineReducers } from 'redux'\nimport testReducer from './testReducer'\n\nconst rootReducer = combineReducers({\n    test: testReducer\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './store/reducers/rootReducer'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = createStore(persistedReducer, applyMiddleware(thunk));\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}