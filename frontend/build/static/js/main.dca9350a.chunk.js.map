{"version":3,"sources":["components/navbar/Navbar.js","store/actions/testActions.js","components/test/TestText.js","components/test/UserInput.js","components/tools/Results.js","components/test/Test.js","components/history/TestRecord.js","components/history/TestResultChart.js","components/history/TestResultGraph.js","components/history/History.js","store/actions/userActions.js","components/tools/useInterval.js","components/tools/Timer.js","components/tools/helpKeys.js","components/tools/Help.js","components/tools/Dropdown.js","components/tools/settingOptions.js","store/actions/themeActions.js","components/theme/ThemeDropdown.js","components/theme/ThemeSelector.js","components/tools/Settings.js","components/tools/WPM.js","components/tools/Tools.js","components/history/Achievements.js","components/theme/GlobalStyles.js","App.js","components/theme/useTheme.js","store/reducers/testReducer.js","store/reducers/userReducer.js","store/reducers/themeReducer.js","store/reducers/rootReducer.js","index.js"],"names":["Navbar","toggleShowSettings","useSelector","state","store","shallowEqual","className","to","id","onClick","setUserInput","input","dispatch","getState","text","test","currentKey","content","length","cwc","replace","trim","split","correctKeys","looplen","Math","min","i","type","currentWordCount","currentKeyCount","currentCorrectKeyCount","TestText","category","requireAccuracy","useDispatch","useEffect","testState","totalWordCount","totalKeyCount","totalCorrectKeyCount","url","dbLabel","axios","get","then","response","data","catch","error","console","log","getRandomText","textLetters","inputLetters","map","letter","idx","UserInput","autoFocus","value","onChange","e","target","Results","results","timer","accuracy","wordsPerMin","percentAccuracy","floor","Object","keys","Test","TestRecord","highest","create_date","formatedDate","match","TestResultChart","tests","user","Number","NEGATIVE_INFINITY","tableBody","colSpan","style","margin","TestResultGraph","svgRef","useRef","svgWrapper","dimensions","ref","useState","setDimensions","observeTarget","current","resizeObserver","ResizeObserver","entries","forEach","entry","contentRect","observe","unobserve","useResizeObserver","svg","select","lowest","POSITIVE_INFINITY","diff","yScale","scaleLinear","domain","range","height","yAxis","axisLeft","ticks","call","myLine","line","x","index","width","y","curve","curveCardinal","selectAll","join","attr","History","header","userId","useInterval","callback","delay","savedCallback","setInterval","clearInterval","Timer","count","setCount","isRunning","setIsRunning","total","getFirstRandomText","helpKeys","rowOne","class","rowTwo","rowThree","rowFour","rowFive","keyMap","shift","0","1","2","3","4","5","6","7","8","9","Help","row","key","Dropdown","title","resetThenSet","list","isListOpen","setIsListOpen","handleClick","ddRef","contains","document","addEventListener","removeEventListener","role","item","selectItem","timers","selected","categories","tags","selectTheme","selectedTheme","ThemeDropdown","themeDdRef","color","props","themes","theme","default","name","setter","themeSwitcher","Settings","setShowSettings","showKeyboard","temp","setTimer","setCategory","settings","setCheckboxValue","setShowKeyboard","setRequireAccuracy","ThemeSelector","marginBottom","checked","WPM","wc","Tools","Achievements","GlobalStyles","createGlobalStyle","colors","h2","right","secondaryText","left","link","highlight","highlightOutline","correct","incorrect","App","showSettings","setTheme","themeLoaded","setThemeLoaded","Waves","useTheme","setSelectedTheme","exact","path","initState","persistConfig","storage","persistReducer","action","textinput","email","isAuthenticated","rootReducer","combineReducers","testReducer","userReducer","themeReducer","persistedReducer","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","getElementById"],"mappings":"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MAAO,IAAKgG,MAAO,QAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,QAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,QAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,QAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,QAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,QAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,QAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,QAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,SAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,QAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,SAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,SAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,SAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,SAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,SAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,QAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,QAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,QAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,QAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,QAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,QAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,QAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,QAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,QAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,SAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,SAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,SAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,SAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,QAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,SAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,SAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,SAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,QAC1B,EAAK,CAAEhG,MAAO,IAAKgG,MAAO,SAC1BC,EAAG,CAAEjG,MAAO,EAAG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","file":"static/js/main.dca9350a.chunk.js","sourcesContent":["import React from 'react'\nimport { useSelector, shallowEqual } from 'react-redux';\nimport { NavLink } from \"react-router-dom\";\nimport \"./Navbar.css\"\n\nconst Navbar = ({ toggleShowSettings }) => {\n    const { store } = useSelector(state => ({\n        store: state\n    }), shallowEqual);\n\n    return (\n        <nav>\n            <ul>\n                <li>\n                    <NavLink className=\"navlink\" to=\"/\">Home</NavLink>\n                </li>\n                <li>\n                    <NavLink className=\"navlink\" to=\"/history\">History</NavLink>\n                </li>\n                <li>\n                    <NavLink className=\"navlink\" to=\"/\">Logout</NavLink>\n                </li>\n                <li id=\"settings-icon\" onClick={toggleShowSettings}>⚙️</li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Navbar\n","import axios from 'axios'\n\nexport const setUserInput = (input) => {\n    return (dispatch, getState) => {\n        const testState = getState().test\n        const { text } = testState\n        const currentKey = !text.content || input.length >= text.content.length ?\n            \"\" : text.content[input.length] === \" \" ?\n                \"spacebar\" : text.content[input.length]\n        const formattedInput = input.replace(/\\s+/g, ' ').trim();\n        let cwc = formattedInput.split(\" \").length;\n\n        let correctKeys = 0\n        let looplen = Math.min(text.content.length, input.length)\n        for (let i = 0; i < looplen; i++) {\n            if (text.content[i] === input[i]) {\n                correctKeys++;\n            }\n        }\n\n        dispatch({\n            type: 'SET_USER_INPUT',\n            input,\n            currentWordCount: cwc,\n            currentKey,\n            currentKeyCount: input.length || 0,\n            currentCorrectKeyCount: correctKeys\n        })\n    }\n}\n\nexport const updateTotalCounts = () => {\n    return (dispatch, getState) => {\n        const testState = getState().test\n        const {\n            totalWordCount,\n            currentWordCount,\n            totalKeyCount,\n            currentKeyCount,\n            totalCorrectKeyCount,\n            currentCorrectKeyCount } = testState\n\n        dispatch({\n            type: 'SET_TOTALS',\n            totalWordCount: totalWordCount || 0 + currentWordCount || 0,\n            totalKeyCount: totalKeyCount || 0 + currentKeyCount || 0,\n            totalCorrectKeyCount: totalCorrectKeyCount || 0 + currentCorrectKeyCount || 0\n        })\n    }\n}\n\nexport const setWordCount = (wordCount) => {\n    return (dispatch) => {\n        dispatch({ type: 'SET_TOTAL_WC', totalWordCount: wordCount })\n    }\n}\n\nexport const getRandomText = (category) => {\n    return (dispatch) => {\n        const url = category && category.dbLabel ? `https://turbotype.herokuapp.com/api/text/random?category=${category.dbLabel}` : `https://turbotype.herokuapp.com/api/text/random`\n        // const url = \"https://turbotype.herokuapp.com/api/text/333\"\n        axios.get(url)\n            .then(response => {\n                dispatch({ type: 'SET_TEXT', text: response.data })\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n}\n\nexport const getFirstRandomText = (category) => {\n    return (dispatch) => {\n        // const url = \"https://turbotype.herokuapp.com/api/text/333\"\n        const url = category && category.dbLabel ? `https://turbotype.herokuapp.com/api/text/random?category=${category.dbLabel}` : `https://turbotype.herokuapp.com/api/text/random`\n        axios.get(url)\n            .then(response => {\n                dispatch({ type: 'SET_FIRST_TEXT', text: response.data })\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n}\n\nexport const setTimer = (timer) => {\n    return (dispatch) => {\n        dispatch({ type: 'SET_TIMER', timer })\n    }\n}\n\nexport const setCategory = (category) => {\n    return (dispatch) => {\n        dispatch({ type: 'SET_CATEGORY', category })\n    }\n}\n\nexport const setShowKeyboard = (showKeyboard) => {\n    return (dispatch) => {\n        dispatch({ type: 'SET_SHOW_KEYBOARD', showKeyboard })\n    }\n}\n\nexport const setRequireAccuracy = (requireAccuracy) => {\n    return (dispatch) => {\n        dispatch({ type: 'SET_REQUIRE_ACCURACY', requireAccuracy })\n    }\n}\n\nexport const createTestRecod = () => {\n    return (dispatch, getState) => {\n        const testState = getState().test\n        const {\n            totalWordCount,\n            totalCorrectKeyCount,\n            totalKeyCount,\n            currentCorrectKeyCount,\n            currentKeyCount,\n            currentWordCount,\n            timer,\n            category\n        } = testState\n\n        let total = totalWordCount || 0\n        const wordsPerMin = Math.floor(60 * ((total + currentWordCount) / timer.value))\n        const accuracy = ((totalCorrectKeyCount || 0 + currentCorrectKeyCount || 0) /\n            (totalKeyCount || 0 + currentKeyCount || 0))\n        const results = {\n            userId: 1,\n            totalWordCount: total + currentWordCount,\n            timer: timer.value,\n            category,\n            wordsPerMin,\n            accuracy\n        }\n        dispatch({ type: 'SET_TEST_RESULTS', results })\n    }\n}\n\nexport const reset = () => {\n    return (dispatch) => {\n        dispatch({ type: 'RESET' })\n    }\n}\n\n","import React, { useEffect } from 'react'\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport { getRandomText, setUserInput, updateTotalCounts } from '../../store/actions/testActions'\n\nconst TestText = () => {\n    const {\n        input,\n        text,\n        category,\n        requireAccuracy\n    } = useSelector(state => ({\n        input: state.test.input,\n        text: state.test.text,\n        category: state.test.category,\n        requireAccuracy: state.test.requireAccuracy,\n    }), shallowEqual);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (text.content !== \"\") {\n            if ((requireAccuracy && text.content === input) ||\n                (!requireAccuracy && text.content.length === input.length)) {\n                dispatch(updateTotalCounts())\n                dispatch(getRandomText(category))\n                dispatch(setUserInput(\"\"))\n            }\n        }\n    }, [input])\n\n\n    const textLetters = text.content && text.content.split(\"\")\n    const inputLetters = input.split(\"\")\n    return (\n        <div className=\"container-a\">\n            <div className=\"user-input-display\">\n                {textLetters && textLetters.length > 0 && textLetters.map((letter, idx) => (\n                    <span key={idx} className={idx === inputLetters.length ? \"active-letter\" :\n                        idx > inputLetters.length ? \"\" :\n                            letter === inputLetters[idx] ? \"correct\" : \"incorrect\"}>\n                        {letter}\n                    </span>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default TestText\n\n// const textLines = text.content && text.content.split('\\n')\n//     const inputLetters = input.split(\"\")\n\n//     return (<div className=\"user-input-display\">\n//         {textLines && textLines.map(line => {\n//             let textLetters = line.split(\"\")\n//             return (\n//                 <>\n//                     {\n//                         textLetters && textLetters.length > 0 && textLetters.map((letter, idx) => (\n//                             <span key={idx} className={idx === inputLetters.length ?\n//                                 \"active-letter\" : idx > inputLetters.length ? \"\" : letter === inputLetters[idx] ?\n//                                     \"correct\" : \"incorrect\"}>{letter}</span>\n//                         ))\n//                     }\n//                     <br />\n//                 </>\n//             )\n//         })\n//         }\n//     </div>\n//     )\n// }\n","import React from \"react\";\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport { setUserInput } from '../../store/actions/testActions'\n\n\nconst UserInput = () => {\n    const {\n        input,\n        text\n    } = useSelector(state => ({\n        input: state.test.input,\n        text: state.test.text,\n    }), shallowEqual);\n    const dispatch = useDispatch();\n\n    return (\n        <div>\n            {text.content &&\n                <textarea\n                    autoFocus\n                    value={input}\n                    onChange={(e) => dispatch(setUserInput(e.target.value))}\n                    className=\"user-input\"\n                />\n            }\n        </div>\n    )\n}\n\nexport default UserInput\n","import React from 'react'\nimport { useSelector, shallowEqual } from 'react-redux';\n\nconst Results = () => {\n    const {\n        results\n    } = useSelector(state => ({\n        results: state.test.results\n    }), shallowEqual);\n\n    const { category, timer, totalWordCount, accuracy, wordsPerMin } = results || {};\n    const percentAccuracy = Math.floor(accuracy * 100)\n    return (\n        <div>\n            {results && Object.keys(results).length > 0 && <div>\n                <h2>Results</h2>\n                <ul>\n                    <li>Words/Minute: {wordsPerMin}</li>\n                    <li>Accuracy: {percentAccuracy}%</li>\n                    <li>Word Count: {totalWordCount}</li>\n                    <li>Timer: {timer} seconds</li>\n                    <li>Category: {category.value}</li>\n                </ul>\n            </div>}\n        </div>\n    )\n}\n\nexport default Results\n","import React, { useState, useEffect } from \"react\";\nimport TestText from './TestText'\nimport UserInput from './UserInput'\nimport Results from '../tools/Results'\nimport './Test.css'\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\n\nconst Test = () => {\n    const {\n        input,\n        text,\n        category,\n        results\n    } = useSelector(state => ({\n        input: state.test.input,\n        text: state.test.text,\n        category: state.test.category,\n        results: state.test.results\n    }), shallowEqual);\n    // console.log(\"?\", results)\n\n    if (!text.content) {\n        return <div className=\"card right\">\n            <div className=\"test-area\">\n                {results && <Results />}\n                {Object.keys(results).length === 0 && <h2>Test Area</h2>}\n            </div>\n        </div>\n    }\n    return (\n        <div className=\"card right\">\n            <TestText />\n            <UserInput />\n        </div>\n    )\n}\n\nexport default Test\n","import React from 'react'\n\nconst TestRecord = ({ test, highest }) => {\n    const { create_date, category, timer, wordsPerMin, accuracy } = test || {};\n    let reg = /^\\w+,\\s\\d+\\s\\w+(?!\\d{4})/g\n    const formatedDate = create_date ? create_date.match(reg) : \"\"\n\n    return (\n        <tr>\n            <td>{wordsPerMin === highest && <span>✨ </span>}{formatedDate}</td>\n            <td>{wordsPerMin}</td>\n            <td>{accuracy}</td>\n            <td>{timer} sec.</td>\n            <td>{category}</td>\n        </tr>\n    )\n}\n\nexport default TestRecord;","import React from 'react'\nimport { useSelector, shallowEqual } from 'react-redux';\n\nimport TestRecord from './TestRecord'\nconst TestResultChart = () => {\n    const {\n        tests\n    } = useSelector(state => ({\n        tests: state.user.tests\n    }), shallowEqual);\n\n    let highest = Number.NEGATIVE_INFINITY;\n\n    for (let i = 0; i < tests.length; i++) {\n        if (tests[i].wordsPerMin > highest) {\n            highest = tests[i].wordsPerMin;\n        }\n    }\n\n    const tableBody = tests && tests.length > 0 ? tests.map(test => {\n        return <TestRecord key={test.id} test={test} highest\n            ={highest} />\n    }) : <tr>\n        <td colSpan=\"4\"> Nothing yet</td>\n    </tr>\n    if (!tests || tests.length === 0) {\n        return (<div></div>)\n    }\n    return (\n        <div style={{ margin: \"0 2em\" }}>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>Date</th>\n                        <th>W/M</th>\n                        <th>Accuracy</th>\n                        <th>Time</th>\n                        <th>Category</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {tableBody}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default TestResultChart\n","import React, { useRef, useState, useEffect } from 'react'\nimport { select, line, curveCardinal, axisLeft, scaleLinear } from 'd3'\nimport { useSelector, shallowEqual } from 'react-redux';\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nconst useResizeObserver = (ref) => {\n    const [dimensions, setDimensions] = useState(null);\n    useEffect(() => {\n        const observeTarget = ref.current;\n        const resizeObserver = new ResizeObserver((entries) => {\n            entries.forEach((entry) => {\n                setDimensions(entry.contentRect);\n            });\n        });\n        resizeObserver.observe(observeTarget);\n        return () => {\n            resizeObserver.unobserve(observeTarget);\n        };\n    }, [ref]);\n    return dimensions;\n};\n\n\nconst TestResultGraph = () => {\n    const {\n        tests\n    } = useSelector(state => ({\n        tests: state.user.tests\n    }), shallowEqual);\n\n    const svgRef = useRef();\n    const svgWrapper = useRef();\n    const dimensions = useResizeObserver(svgWrapper);\n\n    useEffect(() => {\n        const svg = select(svgRef.current);\n        if (!dimensions) return;\n        if (tests.length < 3) return;\n        let lowest = Number.POSITIVE_INFINITY;\n        let highest = Number.NEGATIVE_INFINITY;\n\n        for (let i = 0; i < tests.length; i++) {\n            if (tests[i].wordsPerMin > highest) {\n                highest = tests[i].wordsPerMin;\n            } else if (tests[i].wordsPerMin < lowest) {\n                lowest = tests[i].wordsPerMin;\n            }\n        }\n\n        const diff = (highest - lowest) / 5\n\n        const yScale = scaleLinear()\n            .domain([lowest - diff, highest + diff])\n            .range([dimensions.height, 0])\n\n\n        const yAxis = axisLeft(yScale).ticks(4);\n        svg\n            .select(\".y-axis\")\n            .call(yAxis)\n\n\n        const myLine = line()\n            .x((value, index) => index * (dimensions.width / (tests.length - 1)))\n            .y(value => yScale(value.wordsPerMin))\n            .curve(curveCardinal)\n\n        svg\n            .selectAll(\"path\")\n            .data([tests])\n            .join(\"path\")\n            .attr(\"class\", \"line\")\n            .attr(\"d\", value => myLine(value))\n            .attr(\"fill\", \"none\")\n\n    }, [tests, dimensions])\n\n\n    return (\n        <div className=\"svg-wrapper\" ref={svgWrapper}>\n            <svg ref={svgRef} width=\"100%\" height=\"100%\">\n                <g className=\"x-axis\" />\n                <g className=\"y-axis\" />\n            </svg>\n        </div>\n    )\n}\n\nexport default TestResultGraph\n","import React, { useEffect } from 'react'\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport TestResultChart from './TestResultChart'\nimport TestResultGraph from './TestResultGraph'\nimport { getUserTests } from '../../store/actions/userActions'\nimport './history.css'\n\nconst History = () => {\n    const {\n        tests\n    } = useSelector(state => ({\n        tests: state.user.tests\n    }), shallowEqual);\n    const header = tests && tests.length > 0 ? <h2>Test Records</h2> : <h2>No Results Yet</h2>\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getUserTests())\n    }, [])\n    console.log(tests)\n    return (\n        <section className=\"history right\">\n\n            <div>\n                {header}\n                <TestResultGraph />\n                <TestResultChart />\n            </div>\n        </section>\n    )\n}\n\nexport default History\n","import axios from 'axios'\n\nexport const getUserTests = () => {\n    return (dispatch, getState) => {\n        const userId = getState().user.id\n        const url = `https://turbotype.herokuapp.com/api/user/${userId}/tests`\n        axios.get(url)\n            .then(response => {\n                dispatch({ type: 'SET_USER_TESTS', tests: response.data.tests })\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n}\n\n","import { useEffect, useRef } from 'react'\n\nfunction useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest function.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nexport default useInterval","import React, { useState } from 'react'\nimport \"./Tool.css\"\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport useInterval from './useInterval'\nimport { getFirstRandomText, createTestRecod, reset } from '../../store/actions/testActions'\n\nconst Timer = ({ count, setCount }) => {\n    const {\n        timer,\n        category\n    } = useSelector(state => ({\n        timer: state.test.timer,\n        category: state.test.category\n    }), shallowEqual);\n\n    const delay = 1000;\n    const [isRunning, setIsRunning] = useState(false);\n    const dispatch = useDispatch();\n\n    useInterval(() => {\n        if (count === timer.value - 1) {\n            dispatch(createTestRecod())\n        }\n        setCount(count + 1);\n    }, isRunning && count < timer.value ? delay : null);\n\n\n    function handleStopTimer() {\n        dispatch(reset())\n        setCount(0);\n        setIsRunning(false);\n    }\n\n    function handleStartTimer() {\n        dispatch(getFirstRandomText(category))\n        setCount(0);\n        setIsRunning(true);\n    }\n    return (\n        <div>\n            <div className=\"timer-container\">\n                <div className=\"timer glow-timer\"> {/*className=\"timer glow - timer\"*/}\n                    {timer.value - count}\n                </div>\n                <div className=\"timer-container-footer\">\n                    <button onClick={handleStartTimer}>▶️</button>\n                    <button onClick={handleStopTimer}>⏹️</button>\n                </div>\n            </div >\n        </div>\n    );\n}\n\nexport default Timer\n","export const helpKeys = {\n    rowOne: [\n        {\n            value: '~',\n            class: 'key one'\n        },\n        {\n            value: 1,\n            class: 'key one'\n        },\n        {\n            value: 2,\n            class: 'key one'\n        },\n        {\n            value: 3,\n            class: 'key one'\n        },\n        {\n            value: 4,\n            class: 'key one'\n        },\n        {\n            value: 5,\n            class: 'key one'\n        },\n        {\n            value: 6,\n            class: 'key one'\n        },\n        {\n            value: 7,\n            class: 'key one'\n        },\n        {\n            value: 8,\n            class: 'key one'\n        },\n        {\n            value: 9,\n            class: 'key one'\n        },\n        {\n            value: 0,\n            class: 'key one'\n        },\n        {\n            value: \"-\",\n            class: 'key one'\n        },\n        {\n            value: '=',\n            class: 'key one'\n        },\n        {\n            value: 'del',\n            class: 'key two'\n        }\n    ],\n    rowTwo: [\n        {\n            value: 'tab',\n            class: 'key one-one-half l'\n        },\n        {\n            value: \"q\",\n            class: 'key one'\n        },\n        {\n            value: \"w\",\n            class: 'key one'\n        },\n        {\n            value: \"e\",\n            class: 'key one'\n        },\n        {\n            value: \"r\",\n            class: 'key one'\n        },\n        {\n            value: \"t\",\n            class: 'key one'\n        },\n        {\n            value: \"y\",\n            class: 'key one'\n        },\n        {\n            value: \"u\",\n            class: 'key one'\n        },\n        {\n            value: \"i\",\n            class: 'key one'\n        },\n        {\n            value: \"o\",\n            class: 'key one'\n        },\n        {\n            value: \"p\",\n            class: 'key one'\n        },\n        {\n            value: \"[\",\n            class: 'key one'\n        },\n        {\n            value: ']',\n            class: 'key one'\n        },\n        {\n            value: \"\\\\\",\n            class: 'key one'\n        }\n    ],\n    rowThree: [\n        {\n            value: 'cap',\n            class: 'key one-one-half l'\n        },\n        {\n            value: \"a\",\n            class: 'key one home-row'\n        },\n        {\n            value: \"s\",\n            class: 'key one home-row'\n        },\n        {\n            value: \"d\",\n            class: 'key one home-row'\n        },\n        {\n            value: \"f\",\n            class: 'key one home-row'\n        },\n        {\n            value: \"g\",\n            class: 'key one'\n        },\n        {\n            value: \"h\",\n            class: 'key one'\n        },\n        {\n            value: \"j\",\n            class: 'key one home-row'\n        },\n        {\n            value: \"k\",\n            class: 'key one home-row'\n        },\n        {\n            value: \"l\",\n            class: 'key one home-row'\n        },\n        {\n            value: \";\",\n            class: 'key one home-row'\n        },\n        {\n            value: `'`,\n            class: 'key one'\n        },\n        {\n            value: 'enter',\n            class: 'key two r'\n        }\n    ],\n    rowFour: [\n        {\n            value: 'shift',\n            class: 'key two-two-half l'\n        },\n        {\n            value: \"z\",\n            class: 'key one'\n        },\n        {\n            value: \"x\",\n            class: 'key one'\n        },\n        {\n            value: \"c\",\n            class: 'key one'\n        },\n        {\n            value: \"v\",\n            class: 'key one'\n        },\n        {\n            value: \"b\",\n            class: 'key one'\n        },\n        {\n            value: \"n\",\n            class: 'key one'\n        },\n        {\n            value: \"m\",\n            class: 'key one'\n        },\n        {\n            value: \",\",\n            class: 'key one'\n        },\n        {\n            value: \".\",\n            class: 'key one'\n        },\n        {\n            value: \"/\",\n            class: 'key one'\n        },\n        {\n            value: \"shift\",\n            class: 'key two-two-half r'\n        }\n    ],\n    rowFive: [\n        {\n            value: \"ctrl\",\n            class: 'key two l'\n        },\n        {\n            value: \"alt\",\n            class: 'key two l'\n        },\n        {\n            value: \"spacebar\",\n            class: 'key five'\n        },\n        {\n            value: \"alt\",\n            class: 'key two l'\n        },\n        {\n            value: \"ctrl\",\n            class: 'key two l'\n        },\n        {\n            value: \"   \",\n            class: 'arrowkey-container two-two-half'\n        }\n    ]\n}\n\n\nexport const keyMap = {\n    \"a\": { value: \"a\", shift: \"none\" },\n    \"b\": { value: \"b\", shift: \"none\" },\n    \"c\": { value: \"c\", shift: \"none\" },\n    \"d\": { value: \"d\", shift: \"none\" },\n    \"e\": { value: \"e\", shift: \"none\" },\n    \"f\": { value: \"f\", shift: \"none\" },\n    \"g\": { value: \"g\", shift: \"none\" },\n    \"h\": { value: \"h\", shift: \"none\" },\n    \"i\": { value: \"i\", shift: \"none\" },\n    \"j\": { value: \"j\", shift: \"none\" },\n    \"k\": { value: \"k\", shift: \"none\" },\n    \"l\": { value: \"l\", shift: \"none\" },\n    \"m\": { value: \"m\", shift: \"none\" },\n    \"n\": { value: \"n\", shift: \"none\" },\n    \"o\": { value: \"o\", shift: \"none\" },\n    \"p\": { value: \"p\", shift: \"none\" },\n    \"q\": { value: \"q\", shift: \"none\" },\n    \"r\": { value: \"r\", shift: \"none\" },\n    \"s\": { value: \"s\", shift: \"none\" },\n    \"t\": { value: \"t\", shift: \"none\" },\n    \"u\": { value: \"u\", shift: \"none\" },\n    \"v\": { value: \"v\", shift: \"none\" },\n    \"w\": { value: \"w\", shift: \"none\" },\n    \"x\": { value: \"x\", shift: \"none\" },\n    \"y\": { value: \"y\", shift: \"none\" },\n    \"z\": { value: \"z\", shift: \"none\" },\n    \"A\": { value: \"a\", shift: \"right\" },\n    \"B\": { value: \"b\", shift: \"left\" },\n    \"C\": { value: \"c\", shift: \"right\" },\n    \"D\": { value: \"d\", shift: \"right\" },\n    \"E\": { value: \"e\", shift: \"right\" },\n    \"F\": { value: \"f\", shift: \"right\" },\n    \"G\": { value: \"g\", shift: \"right\" },\n    \"H\": { value: \"h\", shift: \"left\" },\n    \"I\": { value: \"i\", shift: \"left\" },\n    \"J\": { value: \"j\", shift: \"left\" },\n    \"K\": { value: \"k\", shift: \"left\" },\n    \"L\": { value: \"l\", shift: \"left\" },\n    \"M\": { value: \"m\", shift: \"left\" },\n    \"N\": { value: \"n\", shift: \"left\" },\n    \"O\": { value: \"o\", shift: \"left\" },\n    \"P\": { value: \"p\", shift: \"left\" },\n    \"Q\": { value: \"q\", shift: \"right\" },\n    \"R\": { value: \"r\", shift: \"right\" },\n    \"S\": { value: \"s\", shift: \"right\" },\n    \"T\": { value: \"t\", shift: \"right\" },\n    \"U\": { value: \"u\", shift: \"left\" },\n    \"V\": { value: \"v\", shift: \"right\" },\n    \"W\": { value: \"w\", shift: \"right\" },\n    \"X\": { value: \"x\", shift: \"right\" },\n    \"Y\": { value: \"y\", shift: \"left\" },\n    \"Z\": { value: \"z\", shift: \"right\" },\n    0: { value: 0, shift: \"none\" },\n    1: { value: 1, shift: \"none\" },\n    2: { value: 2, shift: \"none\" },\n    3: { value: 3, shift: \"none\" },\n    4: { value: 4, shift: \"none\" },\n    5: { value: 5, shift: \"none\" },\n    6: { value: 6, shift: \"none\" },\n    7: { value: 7, shift: \"none\" },\n    8: { value: 8, shift: \"none\" },\n    9: { value: 9, shift: \"none\" },\n    \"-\": { value: \"-\", shift: \"none\" },\n    \"=\": { value: \"=\", shift: \"none\" },\n    \")\": { value: 0, shift: \"left\" },\n    \"!\": { value: 1, shift: \"right\" },\n    \"@\": { value: 2, shift: \"right\" },\n    \"#\": { value: 3, shift: \"right\" },\n    \"$\": { value: 4, shift: \"right\" },\n    \"%\": { value: 5, shift: \"right\" },\n    \"^\": { value: 6, shift: \"left\" },\n    \"&\": { value: 7, shift: \"left\" },\n    \"*\": { value: 8, shift: \"left\" },\n    \"(\": { value: 9, shift: \"left\" },\n    \"_\": { value: \"-\", shift: \"left\" },\n    \"+\": { value: \"=\", shift: \"left\" },\n    \"`\": { value: \"~\", shift: \"none\" },\n    \"~\": { value: \"~\", shift: \"right\" },\n    \",\": { value: \",\", shift: \"none\" },\n    \"<\": { value: \",\", shift: \"left\" },\n    \".\": { value: \".\", shift: \"none\" },\n    \">\": { value: \".\", shift: \"left\" },\n    \"/\": { value: \"/\", shift: \"left\" },\n    \"?\": { value: \"/\", shift: \"left\" },\n    \";\": { value: \";\", shift: \"none\" },\n    \":\": { value: \";\", shift: \"left\" },\n    \"'\": { value: `'`, shift: \"none\" },\n    '\"': { value: `\"`, shift: \"left\" },\n    \"’\": { value: `'`, shift: \"none\" },\n    'spacebar': { value: \"spacebar\", shift: \"none\" },\n    '\\n': { value: \"enter\", shift: \"none\" },\n}\n\n","import React from 'react'\nimport \"./Tool.css\"\nimport { helpKeys, keyMap } from './helpKeys'\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\n\nconst Help = () => {\n    const {\n        input,\n        text,\n        currentKey\n    } = useSelector(state => ({\n        input: state.test.input,\n        text: state.test.text,\n        currentKey: state.test.currentKey\n    }), shallowEqual);\n    const current = currentKey && keyMap[currentKey] ? keyMap[currentKey].value : \"\";\n    const shift = currentKey && keyMap[currentKey] ? keyMap[currentKey].shift : \"none\";\n    return (\n        <div className=\"keyboard\">\n            {Object.keys(helpKeys).map(row => (\n                <section className=\"key-row\" key={row}>\n                    {helpKeys[row].map((key, idx) => {\n                        let className = key.value === current ? `${key.class} active-key` : `${key.class}`\n                        if (shift === 'right' && row === \"rowFour\" && idx === 11) {\n                            className += ' active-key'\n                        } else if (shift === 'left' && row === \"rowFour\" && idx === 0) {\n                            className += ' active-key'\n                        }\n                        return <div key={`${key}-${idx}`} className={className}>{key.value}</div>\n                    })}\n                </section>\n            )\n            )}\n        </div>\n    )\n}\n\nexport default Help\n","import React, { useState, useRef, useEffect } from 'react'\n\nconst Dropdown = ({ title, header, resetThenSet, list }) => {\n    const [isListOpen, setIsListOpen] = useState(false);\n\n    const toggleList = () => {\n        setIsListOpen(!isListOpen)\n    }\n\n    const closeList = () => {\n        setIsListOpen(false)\n    }\n\n    const selectItem = (item) => {\n        const { id, key } = item;\n        resetThenSet(id, key)\n        setIsListOpen(false)\n    }\n\n    const handleClick = e => {\n        if (ddRef.current.contains(e.target)) {\n            return;\n        }\n        setIsListOpen(false)\n    };\n\n    useEffect(() => {\n        // add when mounted\n        document.addEventListener(\"mousedown\", handleClick);\n        // return function to be called when unmounted\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClick);\n        };\n    }, []);\n\n    const ddRef = useRef();\n    return (\n        <div ref={ddRef} className=\"dd-wrapper\">\n            <p>{title}</p>\n            <button\n                type=\"button\"\n                className=\"dd-header\"\n                onClick={toggleList}\n            >\n                <div className=\"dd-header-title\">{header}</div>\n                {isListOpen\n                    ? \"-\"\n                    : \"+\"}\n            </button>\n            {isListOpen && (\n                <div\n                    role=\"list\"\n                    className=\"dd-list\"\n                >\n                    {list.map((item) => (\n                        <button\n                            type=\"button\"\n                            className={item.value === header ? \"dd-list-item dd-active\" : \"dd-list-item\"}\n                            key={item.id}\n                            onClick={() => selectItem(item)}\n                        >\n                            {item.value}\n                        </button>\n                    ))}\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default Dropdown\n","export const timers = [\n        { id: 0, value: 30, selected: false, key: \"timer\" },\n        { id: 1, value: 60, selected: false, key: \"timer\" },\n        { id: 2, value: 300, selected: false, key: \"timer\" },\n        { id: 3, value: 600, selected: false, key: \"timer\" },\n        { id: 4, value: 10, selected: false, key: \"timer\" }]\n\nexport const categories = [\n        { id: 0, value: \"Any\", dbLabel: null, selected: false, key: \"category\" },\n        { id: 1, value: \"Facts\", dbLabel: \"fact\", selected: false, key: \"category\", tags: [\"Letters only\", \"Letters & Numbers\", \"Letters, Numbers, & Punctuation\"] },\n        { id: 2, value: \"Quotes\", dbLabel: \"quote\", selected: false, key: \"category\" },\n        { id: 3, value: \"Music\", dbLabel: \"song\", selected: false, key: \"category\", tags: [\"Any\", \"R&B\", \"Pop\", \"Rock\"] },\n        { id: 4, value: \"Star Wars\", dbLabel: \"star_wars\", selected: false, key: \"category\", tags: [\"Any\", \"1-3\", \"4-6\", \"7-9\"] }]\n","export const selectTheme = (selectedTheme) => {\n    return (dispatch) => {\n        dispatch({ type: 'SELECT_THEME', selectedTheme })\n    }\n}\n\n","import React, { useState, useRef, useEffect } from 'react'\n\nconst ThemeDropdown = ({ title, header, resetThenSet, list }) => {\n    const [isListOpen, setIsListOpen] = useState(false);\n\n    const toggleList = () => {\n        setIsListOpen(!isListOpen)\n    }\n\n    const selectItem = (item) => {\n        resetThenSet(item)\n        setIsListOpen(false)\n    }\n\n    const handleClick = e => {\n        if (themeDdRef.current.contains(e.target)) {\n            return;\n        }\n        setIsListOpen(false)\n    };\n\n    useEffect(() => {\n        // add when mounted\n        document.addEventListener(\"mousedown\", handleClick);\n        // return function to be called when unmounted\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClick);\n        };\n    }, []);\n\n    const themeDdRef = useRef();\n\n    return (\n        <div ref={themeDdRef} className=\"dd-wrapper\">\n            <p>{title}</p>\n            <button\n                type=\"button\"\n                className=\"dd-header\"\n                onClick={toggleList}\n            >\n                <div className=\"dd-header-title\">{header}</div>\n                {isListOpen\n                    ? \"-\"\n                    : \"+\"}\n            </button>\n            {isListOpen && (\n                <div\n                    role=\"list\"\n                    className=\"dd-list\"\n                >\n                    {list.map((item) => (\n                        <button\n                            type=\"button\"\n                            className={item === header ? \"dd-list-item dd-active\" : \"dd-list-item\"}\n                            style={{ color: 'black' }}\n                            key={item}\n                            onClick={() => selectItem(item)}\n                        >\n                            {item}\n                        </button>\n                    ))}\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default ThemeDropdown;\n","import React from \"react\";\nimport { useSelector, shallowEqual } from 'react-redux';\nimport ThemeDropdown from \"./ThemeDropdown\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (props) => {\n    const {\n        themes,\n        selectedTheme\n    } = useSelector(state => ({\n        themes: state.theme.themes.default.data,\n        selectedTheme: state.theme.selectedTheme\n    }), shallowEqual);\n\n\n    const themeSwitcher = selectedTheme => {\n        props.setter(selectedTheme);\n    };\n\n    const resetThenSet = (theme) => {\n        themeSwitcher(themes[theme])\n    }\n    return (\n        <div>\n            <ThemeDropdown\n                title={\"Theme\"}\n                list={Object.keys(themes)}\n                header={selectedTheme.name}\n                resetThenSet={resetThenSet}\n            />\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { setTimer, setCategory, setShowKeyboard, setRequireAccuracy } from '../../store/actions/testActions'\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport Dropdown from './Dropdown'\nimport { timers, categories } from './settingOptions'\nimport { selectTheme } from \"../../store/actions/themeActions\"\nimport ThemeSelector from \"../theme/ThemeSelector\"\n\nconst Settings = ({ setShowSettings }) => {\n    const {\n        timer,\n        category,\n        showKeyboard,\n        requireAccuracy,\n        themes\n    } = useSelector(state => ({\n        timer: state.test.timer,\n        category: state.test.category,\n        showKeyboard: state.test.showKeyboard,\n        requireAccuracy: state.test.requireAccuracy,\n        themes: state.theme.themes,\n    }), shallowEqual);\n\n    const dispatch = useDispatch();\n\n    const resetThenSet = (id, key) => {\n        let temp;\n        switch (key) {\n            case \"timer\":\n                temp = [...timers]\n                temp.forEach((item) => item.selected = false);\n                temp[id].selected = true;\n                dispatch(setTimer(temp[id]))\n                break;\n            case \"category\":\n                temp = [...categories]\n                temp.forEach((item) => item.selected = false);\n                temp[id].selected = true;\n                dispatch(setCategory(temp[id]))\n                break;\n            default:\n                console.log(\"default\", key)\n        }\n    }\n\n    const handleClick = e => {\n        if (settings.current.contains(e.target) && e.target.id !== \"settings-colse-icon\") {\n            return;\n        }\n        if (e.target.id === \"settings-icon\") return;\n        setShowSettings(false)\n    };\n\n    useEffect(() => {\n        // add when mounted\n        document.addEventListener(\"mousedown\", handleClick);\n        // return function to be called when unmounted\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClick);\n        };\n    }, []);\n\n    const setCheckboxValue = (e) => {\n        if (e.target.id === \"showKeyboard\") {\n            dispatch(setShowKeyboard(!showKeyboard))\n        } else if (e.target.id === \"requireAccuracy\") {\n            dispatch(setRequireAccuracy(!requireAccuracy))\n        }\n    }\n\n    const onSelectTheme = (e, theme) => {\n        e.preventDefault()\n        dispatch(selectTheme(themes.default.data[theme]))\n    }\n\n    const setSelectedTheme = (theme) => {\n        dispatch(selectTheme(theme))\n    }\n    const settings = useRef();\n    return (\n        <div ref={settings} className=\"settings\">\n            <p className=\"settings-header\">Settings <span id=\"settings-colse-icon\">X</span></p>\n            <Dropdown title={\"Timer\"} list={timers} header={timer.value} resetThenSet={resetThenSet} />\n            <Dropdown title={\"Category\"} list={categories} header={category.value} resetThenSet={resetThenSet} />\n            <ThemeSelector setter={setSelectedTheme} />\n            <div style={{ marginBottom: '1em' }}>\n                <label className=\"checkbox-wrapper\">\n                    <input\n                        checked={showKeyboard}\n                        onChange={setCheckboxValue}\n                        type=\"checkbox\"\n                        id=\"showKeyboard\"\n                    />\n                    <span>Show Keyboard</span>\n                </label>\n            </div>\n            <div style={{ marginBottom: '2em' }}>\n                <label className=\"checkbox-wrapper\">\n                    <input\n                        checked={requireAccuracy}\n                        onChange={setCheckboxValue}\n                        type=\"checkbox\"\n                        id=\"requireAccuracy\"\n                    />\n                    <span>Require Accuracy</span>\n                </label>\n            </div>\n        </div>\n    )\n}\n\nexport default Settings\n","import React from 'react'\nimport \"./Tool.css\"\nimport { useSelector, shallowEqual } from 'react-redux';\nconst WPM = ({ count }) => {\n    const {\n        totalWordCount,\n        currentWordCount,\n        timer,\n        results\n    } = useSelector(state => ({\n        totalWordCount: state.test.totalWordCount,\n        currentWordCount: state.test.currentWordCount,\n        timer: state.test.timer,\n        results: state.test.results\n    }), shallowEqual);\n\n    let wc = results && results.wordsPerMin ?\n        results.wordsPerMin : count ?\n            Math.floor(60 * ((totalWordCount + currentWordCount) / count)) :\n            0\n\n    return <h3>{wc} Words/Minute</h3>\n}\n\nexport default WPM\n","import React, { useState } from 'react'\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport Timer from './Timer'\nimport Help from './Help'\nimport Results from './Results'\nimport Settings from './Settings'\nimport WPM from './WPM'\n\nconst Tools = () => {\n    // const [toolTab, setToolTab] = useState(\"Results\")\n    // const onTabClick = (e) => {\n    //     e.preventDefault()\n    //     setToolTab(e.target.id)\n    // }\n    const [count, setCount] = useState(0);\n    const {\n        showKeyboard,\n        results\n    } = useSelector(state => ({\n        showKeyboard: state.test.showKeyboard,\n        results: state.test.results\n    }), shallowEqual);\n\n    return (\n        <div className=\"tools\">\n            <Timer count={count} setCount={setCount} />\n            <div className=\"wpm\">\n                <WPM count={count} />\n            </div>\n            {showKeyboard && <Help />}\n        </div>\n    )\n}\n\nexport default Tools\n","import React from 'react'\n\nconst Achievements = () => {\n    return (\n        <div >\n            <h1>Achievements</h1>\n        </div>\n    )\n}\n\nexport default Achievements\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    color: ${({ theme }) => theme.colors.text};\n    transition: all 0.50s linear;\n  }\n\n  h2{\n    color: ${({ theme }) => theme.colors.h2};\n  }\n\n  .right{\n    background: ${({ theme }) => theme.colors.right};\n    color: ${({ theme }) => theme.colors.secondaryText};\n  }\n\n  .test-area{\n    color: ${({ theme }) => theme.colors.secondaryText};\n  }\n\n  .left{\n    background: ${({ theme }) => theme.colors.left};\n  }\n\n  nav{\n    border-bottom:0.5px solid ${({ theme }) => theme.colors.text};\n  }\n\n  .settings{\n    border-bottom:0.5px solid ${({ theme }) => theme.colors.text};\n    transition: all 1s linear;\n  }\n\n  a {\n    color: ${({ theme }) => theme.colors.link.text};\n    cursor: pointer;\n  }\n\n  .wpm, .help-container {\n    border:1px solid ${({ theme }) => theme.colors.h2};\n    padding:0;\n  }\n\n  .test-area ul{\n    border:1px solid ${({ theme }) => theme.colors.h2};\n  }\n\n  .active-letter{\n    background-color: ${({ theme }) => theme.colors.secondaryText};\n    color: ${({ theme }) => theme.colors.right};\n  }\n  \n  .dd-list .dd-active{\n    background-color: ${({ theme }) => theme.colors.highlight};\n    border: 1px solid ${({ theme }) => theme.colors.highlightOutline};\n  }\n\n  .active-key{\n    background-color: ${({ theme }) => theme.colors.highlight};\n    border: 2px solid ${({ theme }) => theme.colors.highlightOutline};\n    color:black;   \n  }\n\n  .correct {\n    color: ${({ theme }) => theme.colors.correct};\n  }\n\n  .incorrect {\n    color: ${({ theme }) => theme.colors.incorrect};\n    text-decoration: underline;\n  }\n\n  .line{\n    color: ${({ theme }) => theme.colors.h2};\n  }\n\n  .table thead tr {\n    background-color: ${({ theme }) => theme.colors.h2};\n    color: ${({ theme }) => theme.colors.right};\n    text-align: left;\n  }\n\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport './App.css';\nimport Navbar from \"./components/navbar/Navbar\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Test from \"./components/test/Test\"\nimport History from './components/history/History';\nimport Tools from \"./components/tools/Tools\"\nimport Settings from \"./components/tools/Settings\"\nimport Achievements from \"./components/history/Achievements\"\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from './components/theme/GlobalStyles';\nimport { useTheme } from './components/theme/useTheme';\nimport { selectTheme } from \"./store/actions/themeActions\"\n\nfunction App() {\n  const {\n    themes,\n    selectedTheme\n  } = useSelector(state => ({\n    themes: state.theme.themes,\n    selectedTheme: state.theme.selectedTheme\n  }), shallowEqual);\n\n  const dispatch = useDispatch();\n\n  const [showSettings, setShowSettings] = useState(false);\n  const toggleShowSettings = () => {\n    setShowSettings(!showSettings)\n  }\n\n  const { theme, themeLoaded } = useTheme();\n\n  const setSelectedTheme = (theme) => {\n    dispatch(selectTheme(theme))\n  }\n\n  useEffect(() => {\n    setSelectedTheme(theme);\n  }, [themeLoaded]);\n\n  return (\n    <>\n      {\n        themeLoaded && <ThemeProvider theme={selectedTheme}>\n          <GlobalStyles />\n          <Router>\n            <div>\n              <Switch>\n                <Route exact path=\"/\">\n                  <main>\n                    <div className=\"left\">\n                      <Navbar toggleShowSettings={toggleShowSettings} />\n                      {showSettings &&\n                        <Settings setShowSettings={setShowSettings}\n                        />}\n                      <Tools />\n                    </div>\n                    <Test />\n                  </main>\n                </Route>\n                <Route path=\"/history\">\n                  <main>\n                    <div className=\"left\">\n                      <Navbar toggleShowSettings={toggleShowSettings} />\n                      {showSettings &&\n                        <Settings setShowSettings={setShowSettings}\n                        />}\n                      <Achievements />\n                    </div>\n                    <History />\n                  </main>\n                </Route>\n              </Switch>\n            </div>\n          </Router>\n        </ThemeProvider>\n      }\n    </>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\n\nexport const useTheme = () => {\n    const {\n        themes,\n        selectedTheme\n    } = useSelector(state => ({\n        themes: state.theme.themes,\n        selectedTheme: state.theme.selectedTheme\n    }), shallowEqual);\n\n    const [theme, setTheme] = useState(selectedTheme);\n    const [themeLoaded, setThemeLoaded] = useState(false);\n\n    useEffect(() => {\n        selectedTheme ? setTheme(selectedTheme) : setTheme(themes.default.data.Waves);\n        setThemeLoaded(true);\n    }, []);\n\n    return { theme, themeLoaded };\n};","import storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nconst initState = {\n    timer: { id: 0, value: 30, selected: false, key: \"timer\" },\n    input: \"\",\n    text: \"\",\n    totalWordCount: 0,\n    currentWordCount: 0,\n    totalKeyCount: 0,\n    currentKeyCount: 0,\n    totalCorrectKeyCount: 0,\n    currentCorrectKeyCount: 0,\n    results: {},\n    category: { id: 0, value: \"Any\", dbLabel: null, selected: false, key: \"category\" },\n    currentKey: '',\n    showKeyboard: true,\n    requireAccuracy: false,\n}\n\nconst testReducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"SET_USER_INPUT\":\n            // console.log(\"SET_USER_INPUT ?\", action)\n            return {\n                ...state,\n                input: action.input,\n                currentKey: action.currentKey,\n                currentWordCount: action.currentWordCount,\n                currentKeyCount: action.currentKeyCount,\n                currentCorrectKeyCount: action.currentCorrectKeyCount,\n            }\n        case \"SET_TIMER\":\n            console.log(\"SET_TIMER\")\n            return {\n                ...state,\n                timer: action.timer\n            }\n        case \"SET_CATEGORY\":\n            console.log(\"SET_CATEGORY\")\n            return {\n                ...state,\n                category: action.category\n            }\n        case \"SET_SHOW_KEYBOARD\":\n            console.log(\"SET_SHOW_KEYBOARD\")\n            return {\n                ...state,\n                showKeyboard: action.showKeyboard\n            }\n        case \"SET_REQUIRE_ACCURACY\":\n            console.log(\"SET_REQUIRE_ACCURACY\")\n            return {\n                ...state,\n                requireAccuracy: action.requireAccuracy\n            }\n        case \"SET_TEXT\":\n            console.log(\"SET_TEXT\", action.text)\n            return {\n                ...state,\n                text: action.text,\n                input: \"\",\n                currentKey: action.text.content[0]\n            }\n        case \"SET_FIRST_TEXT\":\n            console.log(\"SET_FIRTS_TEXT\", action.text)\n            return {\n                ...state,\n                text: action.text,\n                input: \"\", textinput: \"\",\n                totalWordCount: 0,\n                currentWordCount: 0,\n                totalKeyCount: 0,\n                currentKeyCount: 0,\n                totalCorrectKeyCount: 0,\n                currentCorrectKeyCount: 0,\n                results: {},\n                currentKey: action.text.content[0]\n            }\n        case \"SET_TOTALS\":\n            console.log(\"SET_TOTALS\")\n            return {\n                ...state,\n                totalWordCount: action.totalWordCount,\n                currentWordCount: 0,\n                totalKeyCount: action.totalKeyCount,\n                // currentKeyCount: 0,\n                totalCorrectKeyCount: action.totalCorrectKeyCount,\n                // currentCorrectKeyCount: 0,\n            }\n        case \"SET_TEST_RESULTS\":\n            console.log(\"SET_TEST_RESULTS\")\n            console.log(\"RESULTS:\", action.results)\n            return {\n                ...state,\n                results: action.results,\n                input: \"\",\n                text: \"\",\n                currentKey: \"\",\n                accuracy: action.accuracy\n            }\n        case \"RESET\":\n            console.log(\"REST\")\n            return {\n                ...state,\n                text: { content: \"\" },\n                input: \"\",\n                totalWordCount: 0,\n                currentWordCount: 0,\n                results: {},\n                currentKey: \"\"\n            }\n        default:\n            return state;\n    }\n}\n\nconst persistConfig = {\n    key: 'test',\n    storage: storage\n};\n\nexport default persistReducer(persistConfig, testReducer);\n\n\n","import storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nconst initState = {\n    id: 1,\n    name: \"Test User\",\n    email: \"test@e.mail\",\n    tests: [],\n    isAuthenticated: false,\n}\n\nconst userReducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"LOGIN\":\n            console.log(\"LOGIN\")\n            return {\n                ...state,\n                name: action.user.name,\n                email: action.user.email\n            }\n\n        case \"LOGOUT\":\n            console.log(\"LOGOUT\")\n            return initState\n\n        case \"SET_USER_TESTS\":\n            console.log(\"GET_USER_TESTS\")\n            return {\n                ...state,\n                tests: action.tests\n            }\n        default:\n            return state;\n    }\n}\n\nconst persistConfig = {\n    key: 'user',\n    storage: storage\n};\n\nexport default persistReducer(persistConfig, userReducer);\n\n\n","import storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\nimport * as themes from '../../components/theme/schema.json';\n\nconst initState = {\n    themes: themes,\n    selectedTheme: themes.default.data['Waves']\n}\n\nconst themeReducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"SELECT_THEME\":\n            console.log(\"SELECT_THEME\", action.selectedTheme)\n            return {\n                ...state,\n                selectedTheme: action.selectedTheme\n            }\n        default:\n            return state;\n    }\n}\n\nconst persistConfig = {\n    key: 'theme',\n    storage: storage\n};\n\nexport default persistReducer(persistConfig, themeReducer);\n\n\n","import { combineReducers } from 'redux'\nimport testReducer from './testReducer'\nimport userReducer from './userReducer'\nimport themeReducer from './themeReducer'\n\nconst rootReducer = combineReducers({\n    test: testReducer,\n    user: userReducer,\n    theme: themeReducer\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './store/reducers/rootReducer'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = createStore(persistedReducer, applyMiddleware(thunk));\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}